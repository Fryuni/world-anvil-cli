/*
World Anvil Public API Documentation

Welcome to the World Anvil Public API Documentation. This API provides developers and World Anvil users with programmatic access to the extensive features of the World Anvil worldbuilding platform. Whether you're building integrations, automating tasks, or creating custom experiences, this API empowers you to interact with your worldbuilding data seamlessly.

API version: 2.0.0 - Boromir
Contact: contact@worldanvil.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package worldanvil

import (
	"encoding/json"
)

// checks if the ArticleGenericFull type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArticleGenericFull{}

// ArticleGenericFull struct for ArticleGenericFull
type ArticleGenericFull struct {
	Id *string `json:"id,omitempty"`
	Title *string `json:"title,omitempty"`
	Slug *string `json:"slug,omitempty"`
	State *string `json:"state,omitempty"`
	IsWip *bool `json:"isWip,omitempty"`
	IsDraft *bool `json:"isDraft,omitempty"`
	EntityClass *string `json:"entityClass,omitempty"`
	Icon NullableString `json:"icon,omitempty"`
	Url *string `json:"url,omitempty"`
	FolderId *string `json:"folderId,omitempty"`
	Tags *string `json:"tags,omitempty"`
	UpdateDate *Object `json:"updateDate,omitempty"`
	Subscribergroups []Object `json:"subscribergroups,omitempty"`
	IsEditable *bool `json:"isEditable,omitempty"`
	Success *bool `json:"success,omitempty"`
	Position *int32 `json:"position,omitempty"`
	Excerpt *string `json:"excerpt,omitempty"`
	Wordcount *int32 `json:"wordcount,omitempty"`
	CreationDate *Object `json:"creationDate,omitempty"`
	PublicationDate *Object `json:"publicationDate,omitempty"`
	NotificationDate *Object `json:"notificationDate,omitempty"`
	Likes []Object `json:"likes,omitempty"`
	Views *int32 `json:"views,omitempty"`
	UserMetadata interface{} `json:"userMetadata,omitempty"`
	ArticleMetadata interface{} `json:"articleMetadata,omitempty"`
	CssClasses *string `json:"cssClasses,omitempty"`
	DisplayCss *string `json:"displayCss,omitempty"`
	TemplateType *string `json:"templateType,omitempty"`
	CustomArticleTemplate NullableString `json:"customArticleTemplate,omitempty"`
	Content *string `json:"content,omitempty"`
	Author *Object `json:"author,omitempty"`
	Category *ArticleGenericGR1Category `json:"category,omitempty"`
	World *Object `json:"world,omitempty"`
	Pronunciation *string `json:"pronunciation,omitempty"`
	Snippet *string `json:"snippet,omitempty"`
	Seeded *string `json:"seeded,omitempty"`
	Sidebarcontent *string `json:"sidebarcontent,omitempty"`
	Sidepanelcontenttop *string `json:"sidepanelcontenttop,omitempty"`
	Sidepanelcontent *string `json:"sidepanelcontent,omitempty"`
	Sidebarcontentbottom *string `json:"sidebarcontentbottom,omitempty"`
	Footnotes *string `json:"footnotes,omitempty"`
	Fullfooter *string `json:"fullfooter,omitempty"`
	Authornotes *string `json:"authornotes,omitempty"`
	Scrapbook *string `json:"scrapbook,omitempty"`
	Credits *string `json:"credits,omitempty"`
	DisplaySidebar *bool `json:"displaySidebar,omitempty"`
	Timeline *Object `json:"timeline,omitempty"`
	Prompt *Object `json:"prompt,omitempty"`
	ShowSeeded *bool `json:"showSeeded,omitempty"`
	WebhookUpdate *bool `json:"webhookUpdate,omitempty"`
	CommunityUpdate *bool `json:"communityUpdate,omitempty"`
	CommentPlaceholder NullableString `json:"commentPlaceholder,omitempty"`
	MetaTitle NullableString `json:"metaTitle,omitempty"`
	MetadDescription NullableString `json:"metadDescription,omitempty"`
	Subheading NullableString `json:"subheading,omitempty"`
	CoverIsMap *bool `json:"coverIsMap,omitempty"`
	IsFeaturedArticle *bool `json:"isFeaturedArticle,omitempty"`
	IsAdultContent *bool `json:"isAdultContent,omitempty"`
	IsLocked *bool `json:"isLocked,omitempty"`
	AllowComments *bool `json:"allowComments,omitempty"`
	ShowInToc *bool `json:"showInToc,omitempty"`
	IsEmphasized *bool `json:"isEmphasized,omitempty"`
	DisplayAuthor *bool `json:"displayAuthor,omitempty"`
	DisplayChildrenUnder *bool `json:"displayChildrenUnder,omitempty"`
	DisplayTitle *bool `json:"displayTitle,omitempty"`
	DisplaySheet *bool `json:"displaySheet,omitempty"`
	Badge NullableString `json:"badge,omitempty"`
	Secrets []Object `json:"secrets,omitempty"`
	Histories []Object `json:"histories,omitempty"`
	EditURL *string `json:"editURL,omitempty"`
	Cover *Object `json:"cover,omitempty"`
	Gallery *interface{} `json:"gallery,omitempty"`
	ArticleNext *string `json:"articleNext,omitempty"`
	ArticlePrevious *string `json:"articlePrevious,omitempty"`
	Block *interface{} `json:"block,omitempty"`
	Orgchart *interface{} `json:"orgchart,omitempty"`
	Manuscripts []Object `json:"manuscripts,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ArticleGenericFull ArticleGenericFull

// NewArticleGenericFull instantiates a new ArticleGenericFull object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArticleGenericFull() *ArticleGenericFull {
	this := ArticleGenericFull{}
	return &this
}

// NewArticleGenericFullWithDefaults instantiates a new ArticleGenericFull object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArticleGenericFullWithDefaults() *ArticleGenericFull {
	this := ArticleGenericFull{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ArticleGenericFull) SetId(v string) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ArticleGenericFull) SetTitle(v string) {
	o.Title = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *ArticleGenericFull) SetSlug(v string) {
	o.Slug = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ArticleGenericFull) SetState(v string) {
	o.State = &v
}

// GetIsWip returns the IsWip field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetIsWip() bool {
	if o == nil || IsNil(o.IsWip) {
		var ret bool
		return ret
	}
	return *o.IsWip
}

// GetIsWipOk returns a tuple with the IsWip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetIsWipOk() (*bool, bool) {
	if o == nil || IsNil(o.IsWip) {
		return nil, false
	}
	return o.IsWip, true
}

// HasIsWip returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasIsWip() bool {
	if o != nil && !IsNil(o.IsWip) {
		return true
	}

	return false
}

// SetIsWip gets a reference to the given bool and assigns it to the IsWip field.
func (o *ArticleGenericFull) SetIsWip(v bool) {
	o.IsWip = &v
}

// GetIsDraft returns the IsDraft field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetIsDraft() bool {
	if o == nil || IsNil(o.IsDraft) {
		var ret bool
		return ret
	}
	return *o.IsDraft
}

// GetIsDraftOk returns a tuple with the IsDraft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetIsDraftOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDraft) {
		return nil, false
	}
	return o.IsDraft, true
}

// HasIsDraft returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasIsDraft() bool {
	if o != nil && !IsNil(o.IsDraft) {
		return true
	}

	return false
}

// SetIsDraft gets a reference to the given bool and assigns it to the IsDraft field.
func (o *ArticleGenericFull) SetIsDraft(v bool) {
	o.IsDraft = &v
}

// GetEntityClass returns the EntityClass field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetEntityClass() string {
	if o == nil || IsNil(o.EntityClass) {
		var ret string
		return ret
	}
	return *o.EntityClass
}

// GetEntityClassOk returns a tuple with the EntityClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetEntityClassOk() (*string, bool) {
	if o == nil || IsNil(o.EntityClass) {
		return nil, false
	}
	return o.EntityClass, true
}

// HasEntityClass returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasEntityClass() bool {
	if o != nil && !IsNil(o.EntityClass) {
		return true
	}

	return false
}

// SetEntityClass gets a reference to the given string and assigns it to the EntityClass field.
func (o *ArticleGenericFull) SetEntityClass(v string) {
	o.EntityClass = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArticleGenericFull) GetIcon() string {
	if o == nil || IsNil(o.Icon.Get()) {
		var ret string
		return ret
	}
	return *o.Icon.Get()
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArticleGenericFull) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Icon.Get(), o.Icon.IsSet()
}

// HasIcon returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasIcon() bool {
	if o != nil && o.Icon.IsSet() {
		return true
	}

	return false
}

// SetIcon gets a reference to the given NullableString and assigns it to the Icon field.
func (o *ArticleGenericFull) SetIcon(v string) {
	o.Icon.Set(&v)
}
// SetIconNil sets the value for Icon to be an explicit nil
func (o *ArticleGenericFull) SetIconNil() {
	o.Icon.Set(nil)
}

// UnsetIcon ensures that no value is present for Icon, not even an explicit nil
func (o *ArticleGenericFull) UnsetIcon() {
	o.Icon.Unset()
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ArticleGenericFull) SetUrl(v string) {
	o.Url = &v
}

// GetFolderId returns the FolderId field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetFolderId() string {
	if o == nil || IsNil(o.FolderId) {
		var ret string
		return ret
	}
	return *o.FolderId
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetFolderIdOk() (*string, bool) {
	if o == nil || IsNil(o.FolderId) {
		return nil, false
	}
	return o.FolderId, true
}

// HasFolderId returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasFolderId() bool {
	if o != nil && !IsNil(o.FolderId) {
		return true
	}

	return false
}

// SetFolderId gets a reference to the given string and assigns it to the FolderId field.
func (o *ArticleGenericFull) SetFolderId(v string) {
	o.FolderId = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetTags() string {
	if o == nil || IsNil(o.Tags) {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetTagsOk() (*string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *ArticleGenericFull) SetTags(v string) {
	o.Tags = &v
}

// GetUpdateDate returns the UpdateDate field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetUpdateDate() Object {
	if o == nil || IsNil(o.UpdateDate) {
		var ret Object
		return ret
	}
	return *o.UpdateDate
}

// GetUpdateDateOk returns a tuple with the UpdateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetUpdateDateOk() (*Object, bool) {
	if o == nil || IsNil(o.UpdateDate) {
		return nil, false
	}
	return o.UpdateDate, true
}

// HasUpdateDate returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasUpdateDate() bool {
	if o != nil && !IsNil(o.UpdateDate) {
		return true
	}

	return false
}

// SetUpdateDate gets a reference to the given Object and assigns it to the UpdateDate field.
func (o *ArticleGenericFull) SetUpdateDate(v Object) {
	o.UpdateDate = &v
}

// GetSubscribergroups returns the Subscribergroups field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetSubscribergroups() []Object {
	if o == nil || IsNil(o.Subscribergroups) {
		var ret []Object
		return ret
	}
	return o.Subscribergroups
}

// GetSubscribergroupsOk returns a tuple with the Subscribergroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetSubscribergroupsOk() ([]Object, bool) {
	if o == nil || IsNil(o.Subscribergroups) {
		return nil, false
	}
	return o.Subscribergroups, true
}

// HasSubscribergroups returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasSubscribergroups() bool {
	if o != nil && !IsNil(o.Subscribergroups) {
		return true
	}

	return false
}

// SetSubscribergroups gets a reference to the given []Object and assigns it to the Subscribergroups field.
func (o *ArticleGenericFull) SetSubscribergroups(v []Object) {
	o.Subscribergroups = v
}

// GetIsEditable returns the IsEditable field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetIsEditable() bool {
	if o == nil || IsNil(o.IsEditable) {
		var ret bool
		return ret
	}
	return *o.IsEditable
}

// GetIsEditableOk returns a tuple with the IsEditable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetIsEditableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEditable) {
		return nil, false
	}
	return o.IsEditable, true
}

// HasIsEditable returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasIsEditable() bool {
	if o != nil && !IsNil(o.IsEditable) {
		return true
	}

	return false
}

// SetIsEditable gets a reference to the given bool and assigns it to the IsEditable field.
func (o *ArticleGenericFull) SetIsEditable(v bool) {
	o.IsEditable = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *ArticleGenericFull) SetSuccess(v bool) {
	o.Success = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetPosition() int32 {
	if o == nil || IsNil(o.Position) {
		var ret int32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetPositionOk() (*int32, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int32 and assigns it to the Position field.
func (o *ArticleGenericFull) SetPosition(v int32) {
	o.Position = &v
}

// GetExcerpt returns the Excerpt field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetExcerpt() string {
	if o == nil || IsNil(o.Excerpt) {
		var ret string
		return ret
	}
	return *o.Excerpt
}

// GetExcerptOk returns a tuple with the Excerpt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetExcerptOk() (*string, bool) {
	if o == nil || IsNil(o.Excerpt) {
		return nil, false
	}
	return o.Excerpt, true
}

// HasExcerpt returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasExcerpt() bool {
	if o != nil && !IsNil(o.Excerpt) {
		return true
	}

	return false
}

// SetExcerpt gets a reference to the given string and assigns it to the Excerpt field.
func (o *ArticleGenericFull) SetExcerpt(v string) {
	o.Excerpt = &v
}

// GetWordcount returns the Wordcount field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetWordcount() int32 {
	if o == nil || IsNil(o.Wordcount) {
		var ret int32
		return ret
	}
	return *o.Wordcount
}

// GetWordcountOk returns a tuple with the Wordcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetWordcountOk() (*int32, bool) {
	if o == nil || IsNil(o.Wordcount) {
		return nil, false
	}
	return o.Wordcount, true
}

// HasWordcount returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasWordcount() bool {
	if o != nil && !IsNil(o.Wordcount) {
		return true
	}

	return false
}

// SetWordcount gets a reference to the given int32 and assigns it to the Wordcount field.
func (o *ArticleGenericFull) SetWordcount(v int32) {
	o.Wordcount = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetCreationDate() Object {
	if o == nil || IsNil(o.CreationDate) {
		var ret Object
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetCreationDateOk() (*Object, bool) {
	if o == nil || IsNil(o.CreationDate) {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasCreationDate() bool {
	if o != nil && !IsNil(o.CreationDate) {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given Object and assigns it to the CreationDate field.
func (o *ArticleGenericFull) SetCreationDate(v Object) {
	o.CreationDate = &v
}

// GetPublicationDate returns the PublicationDate field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetPublicationDate() Object {
	if o == nil || IsNil(o.PublicationDate) {
		var ret Object
		return ret
	}
	return *o.PublicationDate
}

// GetPublicationDateOk returns a tuple with the PublicationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetPublicationDateOk() (*Object, bool) {
	if o == nil || IsNil(o.PublicationDate) {
		return nil, false
	}
	return o.PublicationDate, true
}

// HasPublicationDate returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasPublicationDate() bool {
	if o != nil && !IsNil(o.PublicationDate) {
		return true
	}

	return false
}

// SetPublicationDate gets a reference to the given Object and assigns it to the PublicationDate field.
func (o *ArticleGenericFull) SetPublicationDate(v Object) {
	o.PublicationDate = &v
}

// GetNotificationDate returns the NotificationDate field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetNotificationDate() Object {
	if o == nil || IsNil(o.NotificationDate) {
		var ret Object
		return ret
	}
	return *o.NotificationDate
}

// GetNotificationDateOk returns a tuple with the NotificationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetNotificationDateOk() (*Object, bool) {
	if o == nil || IsNil(o.NotificationDate) {
		return nil, false
	}
	return o.NotificationDate, true
}

// HasNotificationDate returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasNotificationDate() bool {
	if o != nil && !IsNil(o.NotificationDate) {
		return true
	}

	return false
}

// SetNotificationDate gets a reference to the given Object and assigns it to the NotificationDate field.
func (o *ArticleGenericFull) SetNotificationDate(v Object) {
	o.NotificationDate = &v
}

// GetLikes returns the Likes field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetLikes() []Object {
	if o == nil || IsNil(o.Likes) {
		var ret []Object
		return ret
	}
	return o.Likes
}

// GetLikesOk returns a tuple with the Likes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetLikesOk() ([]Object, bool) {
	if o == nil || IsNil(o.Likes) {
		return nil, false
	}
	return o.Likes, true
}

// HasLikes returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasLikes() bool {
	if o != nil && !IsNil(o.Likes) {
		return true
	}

	return false
}

// SetLikes gets a reference to the given []Object and assigns it to the Likes field.
func (o *ArticleGenericFull) SetLikes(v []Object) {
	o.Likes = v
}

// GetViews returns the Views field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetViews() int32 {
	if o == nil || IsNil(o.Views) {
		var ret int32
		return ret
	}
	return *o.Views
}

// GetViewsOk returns a tuple with the Views field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetViewsOk() (*int32, bool) {
	if o == nil || IsNil(o.Views) {
		return nil, false
	}
	return o.Views, true
}

// HasViews returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasViews() bool {
	if o != nil && !IsNil(o.Views) {
		return true
	}

	return false
}

// SetViews gets a reference to the given int32 and assigns it to the Views field.
func (o *ArticleGenericFull) SetViews(v int32) {
	o.Views = &v
}

// GetUserMetadata returns the UserMetadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArticleGenericFull) GetUserMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.UserMetadata
}

// GetUserMetadataOk returns a tuple with the UserMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArticleGenericFull) GetUserMetadataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.UserMetadata) {
		return nil, false
	}
	return &o.UserMetadata, true
}

// HasUserMetadata returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasUserMetadata() bool {
	if o != nil && !IsNil(o.UserMetadata) {
		return true
	}

	return false
}

// SetUserMetadata gets a reference to the given interface{} and assigns it to the UserMetadata field.
func (o *ArticleGenericFull) SetUserMetadata(v interface{}) {
	o.UserMetadata = v
}

// GetArticleMetadata returns the ArticleMetadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArticleGenericFull) GetArticleMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ArticleMetadata
}

// GetArticleMetadataOk returns a tuple with the ArticleMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArticleGenericFull) GetArticleMetadataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ArticleMetadata) {
		return nil, false
	}
	return &o.ArticleMetadata, true
}

// HasArticleMetadata returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasArticleMetadata() bool {
	if o != nil && !IsNil(o.ArticleMetadata) {
		return true
	}

	return false
}

// SetArticleMetadata gets a reference to the given interface{} and assigns it to the ArticleMetadata field.
func (o *ArticleGenericFull) SetArticleMetadata(v interface{}) {
	o.ArticleMetadata = v
}

// GetCssClasses returns the CssClasses field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetCssClasses() string {
	if o == nil || IsNil(o.CssClasses) {
		var ret string
		return ret
	}
	return *o.CssClasses
}

// GetCssClassesOk returns a tuple with the CssClasses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetCssClassesOk() (*string, bool) {
	if o == nil || IsNil(o.CssClasses) {
		return nil, false
	}
	return o.CssClasses, true
}

// HasCssClasses returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasCssClasses() bool {
	if o != nil && !IsNil(o.CssClasses) {
		return true
	}

	return false
}

// SetCssClasses gets a reference to the given string and assigns it to the CssClasses field.
func (o *ArticleGenericFull) SetCssClasses(v string) {
	o.CssClasses = &v
}

// GetDisplayCss returns the DisplayCss field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetDisplayCss() string {
	if o == nil || IsNil(o.DisplayCss) {
		var ret string
		return ret
	}
	return *o.DisplayCss
}

// GetDisplayCssOk returns a tuple with the DisplayCss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetDisplayCssOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayCss) {
		return nil, false
	}
	return o.DisplayCss, true
}

// HasDisplayCss returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasDisplayCss() bool {
	if o != nil && !IsNil(o.DisplayCss) {
		return true
	}

	return false
}

// SetDisplayCss gets a reference to the given string and assigns it to the DisplayCss field.
func (o *ArticleGenericFull) SetDisplayCss(v string) {
	o.DisplayCss = &v
}

// GetTemplateType returns the TemplateType field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetTemplateType() string {
	if o == nil || IsNil(o.TemplateType) {
		var ret string
		return ret
	}
	return *o.TemplateType
}

// GetTemplateTypeOk returns a tuple with the TemplateType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetTemplateTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateType) {
		return nil, false
	}
	return o.TemplateType, true
}

// HasTemplateType returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasTemplateType() bool {
	if o != nil && !IsNil(o.TemplateType) {
		return true
	}

	return false
}

// SetTemplateType gets a reference to the given string and assigns it to the TemplateType field.
func (o *ArticleGenericFull) SetTemplateType(v string) {
	o.TemplateType = &v
}

// GetCustomArticleTemplate returns the CustomArticleTemplate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArticleGenericFull) GetCustomArticleTemplate() string {
	if o == nil || IsNil(o.CustomArticleTemplate.Get()) {
		var ret string
		return ret
	}
	return *o.CustomArticleTemplate.Get()
}

// GetCustomArticleTemplateOk returns a tuple with the CustomArticleTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArticleGenericFull) GetCustomArticleTemplateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomArticleTemplate.Get(), o.CustomArticleTemplate.IsSet()
}

// HasCustomArticleTemplate returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasCustomArticleTemplate() bool {
	if o != nil && o.CustomArticleTemplate.IsSet() {
		return true
	}

	return false
}

// SetCustomArticleTemplate gets a reference to the given NullableString and assigns it to the CustomArticleTemplate field.
func (o *ArticleGenericFull) SetCustomArticleTemplate(v string) {
	o.CustomArticleTemplate.Set(&v)
}
// SetCustomArticleTemplateNil sets the value for CustomArticleTemplate to be an explicit nil
func (o *ArticleGenericFull) SetCustomArticleTemplateNil() {
	o.CustomArticleTemplate.Set(nil)
}

// UnsetCustomArticleTemplate ensures that no value is present for CustomArticleTemplate, not even an explicit nil
func (o *ArticleGenericFull) UnsetCustomArticleTemplate() {
	o.CustomArticleTemplate.Unset()
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *ArticleGenericFull) SetContent(v string) {
	o.Content = &v
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetAuthor() Object {
	if o == nil || IsNil(o.Author) {
		var ret Object
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetAuthorOk() (*Object, bool) {
	if o == nil || IsNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasAuthor() bool {
	if o != nil && !IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given Object and assigns it to the Author field.
func (o *ArticleGenericFull) SetAuthor(v Object) {
	o.Author = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetCategory() ArticleGenericGR1Category {
	if o == nil || IsNil(o.Category) {
		var ret ArticleGenericGR1Category
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetCategoryOk() (*ArticleGenericGR1Category, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given ArticleGenericGR1Category and assigns it to the Category field.
func (o *ArticleGenericFull) SetCategory(v ArticleGenericGR1Category) {
	o.Category = &v
}

// GetWorld returns the World field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetWorld() Object {
	if o == nil || IsNil(o.World) {
		var ret Object
		return ret
	}
	return *o.World
}

// GetWorldOk returns a tuple with the World field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetWorldOk() (*Object, bool) {
	if o == nil || IsNil(o.World) {
		return nil, false
	}
	return o.World, true
}

// HasWorld returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasWorld() bool {
	if o != nil && !IsNil(o.World) {
		return true
	}

	return false
}

// SetWorld gets a reference to the given Object and assigns it to the World field.
func (o *ArticleGenericFull) SetWorld(v Object) {
	o.World = &v
}

// GetPronunciation returns the Pronunciation field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetPronunciation() string {
	if o == nil || IsNil(o.Pronunciation) {
		var ret string
		return ret
	}
	return *o.Pronunciation
}

// GetPronunciationOk returns a tuple with the Pronunciation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetPronunciationOk() (*string, bool) {
	if o == nil || IsNil(o.Pronunciation) {
		return nil, false
	}
	return o.Pronunciation, true
}

// HasPronunciation returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasPronunciation() bool {
	if o != nil && !IsNil(o.Pronunciation) {
		return true
	}

	return false
}

// SetPronunciation gets a reference to the given string and assigns it to the Pronunciation field.
func (o *ArticleGenericFull) SetPronunciation(v string) {
	o.Pronunciation = &v
}

// GetSnippet returns the Snippet field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetSnippet() string {
	if o == nil || IsNil(o.Snippet) {
		var ret string
		return ret
	}
	return *o.Snippet
}

// GetSnippetOk returns a tuple with the Snippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetSnippetOk() (*string, bool) {
	if o == nil || IsNil(o.Snippet) {
		return nil, false
	}
	return o.Snippet, true
}

// HasSnippet returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasSnippet() bool {
	if o != nil && !IsNil(o.Snippet) {
		return true
	}

	return false
}

// SetSnippet gets a reference to the given string and assigns it to the Snippet field.
func (o *ArticleGenericFull) SetSnippet(v string) {
	o.Snippet = &v
}

// GetSeeded returns the Seeded field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetSeeded() string {
	if o == nil || IsNil(o.Seeded) {
		var ret string
		return ret
	}
	return *o.Seeded
}

// GetSeededOk returns a tuple with the Seeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetSeededOk() (*string, bool) {
	if o == nil || IsNil(o.Seeded) {
		return nil, false
	}
	return o.Seeded, true
}

// HasSeeded returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasSeeded() bool {
	if o != nil && !IsNil(o.Seeded) {
		return true
	}

	return false
}

// SetSeeded gets a reference to the given string and assigns it to the Seeded field.
func (o *ArticleGenericFull) SetSeeded(v string) {
	o.Seeded = &v
}

// GetSidebarcontent returns the Sidebarcontent field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetSidebarcontent() string {
	if o == nil || IsNil(o.Sidebarcontent) {
		var ret string
		return ret
	}
	return *o.Sidebarcontent
}

// GetSidebarcontentOk returns a tuple with the Sidebarcontent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetSidebarcontentOk() (*string, bool) {
	if o == nil || IsNil(o.Sidebarcontent) {
		return nil, false
	}
	return o.Sidebarcontent, true
}

// HasSidebarcontent returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasSidebarcontent() bool {
	if o != nil && !IsNil(o.Sidebarcontent) {
		return true
	}

	return false
}

// SetSidebarcontent gets a reference to the given string and assigns it to the Sidebarcontent field.
func (o *ArticleGenericFull) SetSidebarcontent(v string) {
	o.Sidebarcontent = &v
}

// GetSidepanelcontenttop returns the Sidepanelcontenttop field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetSidepanelcontenttop() string {
	if o == nil || IsNil(o.Sidepanelcontenttop) {
		var ret string
		return ret
	}
	return *o.Sidepanelcontenttop
}

// GetSidepanelcontenttopOk returns a tuple with the Sidepanelcontenttop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetSidepanelcontenttopOk() (*string, bool) {
	if o == nil || IsNil(o.Sidepanelcontenttop) {
		return nil, false
	}
	return o.Sidepanelcontenttop, true
}

// HasSidepanelcontenttop returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasSidepanelcontenttop() bool {
	if o != nil && !IsNil(o.Sidepanelcontenttop) {
		return true
	}

	return false
}

// SetSidepanelcontenttop gets a reference to the given string and assigns it to the Sidepanelcontenttop field.
func (o *ArticleGenericFull) SetSidepanelcontenttop(v string) {
	o.Sidepanelcontenttop = &v
}

// GetSidepanelcontent returns the Sidepanelcontent field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetSidepanelcontent() string {
	if o == nil || IsNil(o.Sidepanelcontent) {
		var ret string
		return ret
	}
	return *o.Sidepanelcontent
}

// GetSidepanelcontentOk returns a tuple with the Sidepanelcontent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetSidepanelcontentOk() (*string, bool) {
	if o == nil || IsNil(o.Sidepanelcontent) {
		return nil, false
	}
	return o.Sidepanelcontent, true
}

// HasSidepanelcontent returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasSidepanelcontent() bool {
	if o != nil && !IsNil(o.Sidepanelcontent) {
		return true
	}

	return false
}

// SetSidepanelcontent gets a reference to the given string and assigns it to the Sidepanelcontent field.
func (o *ArticleGenericFull) SetSidepanelcontent(v string) {
	o.Sidepanelcontent = &v
}

// GetSidebarcontentbottom returns the Sidebarcontentbottom field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetSidebarcontentbottom() string {
	if o == nil || IsNil(o.Sidebarcontentbottom) {
		var ret string
		return ret
	}
	return *o.Sidebarcontentbottom
}

// GetSidebarcontentbottomOk returns a tuple with the Sidebarcontentbottom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetSidebarcontentbottomOk() (*string, bool) {
	if o == nil || IsNil(o.Sidebarcontentbottom) {
		return nil, false
	}
	return o.Sidebarcontentbottom, true
}

// HasSidebarcontentbottom returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasSidebarcontentbottom() bool {
	if o != nil && !IsNil(o.Sidebarcontentbottom) {
		return true
	}

	return false
}

// SetSidebarcontentbottom gets a reference to the given string and assigns it to the Sidebarcontentbottom field.
func (o *ArticleGenericFull) SetSidebarcontentbottom(v string) {
	o.Sidebarcontentbottom = &v
}

// GetFootnotes returns the Footnotes field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetFootnotes() string {
	if o == nil || IsNil(o.Footnotes) {
		var ret string
		return ret
	}
	return *o.Footnotes
}

// GetFootnotesOk returns a tuple with the Footnotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetFootnotesOk() (*string, bool) {
	if o == nil || IsNil(o.Footnotes) {
		return nil, false
	}
	return o.Footnotes, true
}

// HasFootnotes returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasFootnotes() bool {
	if o != nil && !IsNil(o.Footnotes) {
		return true
	}

	return false
}

// SetFootnotes gets a reference to the given string and assigns it to the Footnotes field.
func (o *ArticleGenericFull) SetFootnotes(v string) {
	o.Footnotes = &v
}

// GetFullfooter returns the Fullfooter field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetFullfooter() string {
	if o == nil || IsNil(o.Fullfooter) {
		var ret string
		return ret
	}
	return *o.Fullfooter
}

// GetFullfooterOk returns a tuple with the Fullfooter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetFullfooterOk() (*string, bool) {
	if o == nil || IsNil(o.Fullfooter) {
		return nil, false
	}
	return o.Fullfooter, true
}

// HasFullfooter returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasFullfooter() bool {
	if o != nil && !IsNil(o.Fullfooter) {
		return true
	}

	return false
}

// SetFullfooter gets a reference to the given string and assigns it to the Fullfooter field.
func (o *ArticleGenericFull) SetFullfooter(v string) {
	o.Fullfooter = &v
}

// GetAuthornotes returns the Authornotes field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetAuthornotes() string {
	if o == nil || IsNil(o.Authornotes) {
		var ret string
		return ret
	}
	return *o.Authornotes
}

// GetAuthornotesOk returns a tuple with the Authornotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetAuthornotesOk() (*string, bool) {
	if o == nil || IsNil(o.Authornotes) {
		return nil, false
	}
	return o.Authornotes, true
}

// HasAuthornotes returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasAuthornotes() bool {
	if o != nil && !IsNil(o.Authornotes) {
		return true
	}

	return false
}

// SetAuthornotes gets a reference to the given string and assigns it to the Authornotes field.
func (o *ArticleGenericFull) SetAuthornotes(v string) {
	o.Authornotes = &v
}

// GetScrapbook returns the Scrapbook field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetScrapbook() string {
	if o == nil || IsNil(o.Scrapbook) {
		var ret string
		return ret
	}
	return *o.Scrapbook
}

// GetScrapbookOk returns a tuple with the Scrapbook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetScrapbookOk() (*string, bool) {
	if o == nil || IsNil(o.Scrapbook) {
		return nil, false
	}
	return o.Scrapbook, true
}

// HasScrapbook returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasScrapbook() bool {
	if o != nil && !IsNil(o.Scrapbook) {
		return true
	}

	return false
}

// SetScrapbook gets a reference to the given string and assigns it to the Scrapbook field.
func (o *ArticleGenericFull) SetScrapbook(v string) {
	o.Scrapbook = &v
}

// GetCredits returns the Credits field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetCredits() string {
	if o == nil || IsNil(o.Credits) {
		var ret string
		return ret
	}
	return *o.Credits
}

// GetCreditsOk returns a tuple with the Credits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetCreditsOk() (*string, bool) {
	if o == nil || IsNil(o.Credits) {
		return nil, false
	}
	return o.Credits, true
}

// HasCredits returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasCredits() bool {
	if o != nil && !IsNil(o.Credits) {
		return true
	}

	return false
}

// SetCredits gets a reference to the given string and assigns it to the Credits field.
func (o *ArticleGenericFull) SetCredits(v string) {
	o.Credits = &v
}

// GetDisplaySidebar returns the DisplaySidebar field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetDisplaySidebar() bool {
	if o == nil || IsNil(o.DisplaySidebar) {
		var ret bool
		return ret
	}
	return *o.DisplaySidebar
}

// GetDisplaySidebarOk returns a tuple with the DisplaySidebar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetDisplaySidebarOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplaySidebar) {
		return nil, false
	}
	return o.DisplaySidebar, true
}

// HasDisplaySidebar returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasDisplaySidebar() bool {
	if o != nil && !IsNil(o.DisplaySidebar) {
		return true
	}

	return false
}

// SetDisplaySidebar gets a reference to the given bool and assigns it to the DisplaySidebar field.
func (o *ArticleGenericFull) SetDisplaySidebar(v bool) {
	o.DisplaySidebar = &v
}

// GetTimeline returns the Timeline field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetTimeline() Object {
	if o == nil || IsNil(o.Timeline) {
		var ret Object
		return ret
	}
	return *o.Timeline
}

// GetTimelineOk returns a tuple with the Timeline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetTimelineOk() (*Object, bool) {
	if o == nil || IsNil(o.Timeline) {
		return nil, false
	}
	return o.Timeline, true
}

// HasTimeline returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasTimeline() bool {
	if o != nil && !IsNil(o.Timeline) {
		return true
	}

	return false
}

// SetTimeline gets a reference to the given Object and assigns it to the Timeline field.
func (o *ArticleGenericFull) SetTimeline(v Object) {
	o.Timeline = &v
}

// GetPrompt returns the Prompt field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetPrompt() Object {
	if o == nil || IsNil(o.Prompt) {
		var ret Object
		return ret
	}
	return *o.Prompt
}

// GetPromptOk returns a tuple with the Prompt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetPromptOk() (*Object, bool) {
	if o == nil || IsNil(o.Prompt) {
		return nil, false
	}
	return o.Prompt, true
}

// HasPrompt returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasPrompt() bool {
	if o != nil && !IsNil(o.Prompt) {
		return true
	}

	return false
}

// SetPrompt gets a reference to the given Object and assigns it to the Prompt field.
func (o *ArticleGenericFull) SetPrompt(v Object) {
	o.Prompt = &v
}

// GetShowSeeded returns the ShowSeeded field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetShowSeeded() bool {
	if o == nil || IsNil(o.ShowSeeded) {
		var ret bool
		return ret
	}
	return *o.ShowSeeded
}

// GetShowSeededOk returns a tuple with the ShowSeeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetShowSeededOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowSeeded) {
		return nil, false
	}
	return o.ShowSeeded, true
}

// HasShowSeeded returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasShowSeeded() bool {
	if o != nil && !IsNil(o.ShowSeeded) {
		return true
	}

	return false
}

// SetShowSeeded gets a reference to the given bool and assigns it to the ShowSeeded field.
func (o *ArticleGenericFull) SetShowSeeded(v bool) {
	o.ShowSeeded = &v
}

// GetWebhookUpdate returns the WebhookUpdate field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetWebhookUpdate() bool {
	if o == nil || IsNil(o.WebhookUpdate) {
		var ret bool
		return ret
	}
	return *o.WebhookUpdate
}

// GetWebhookUpdateOk returns a tuple with the WebhookUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetWebhookUpdateOk() (*bool, bool) {
	if o == nil || IsNil(o.WebhookUpdate) {
		return nil, false
	}
	return o.WebhookUpdate, true
}

// HasWebhookUpdate returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasWebhookUpdate() bool {
	if o != nil && !IsNil(o.WebhookUpdate) {
		return true
	}

	return false
}

// SetWebhookUpdate gets a reference to the given bool and assigns it to the WebhookUpdate field.
func (o *ArticleGenericFull) SetWebhookUpdate(v bool) {
	o.WebhookUpdate = &v
}

// GetCommunityUpdate returns the CommunityUpdate field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetCommunityUpdate() bool {
	if o == nil || IsNil(o.CommunityUpdate) {
		var ret bool
		return ret
	}
	return *o.CommunityUpdate
}

// GetCommunityUpdateOk returns a tuple with the CommunityUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetCommunityUpdateOk() (*bool, bool) {
	if o == nil || IsNil(o.CommunityUpdate) {
		return nil, false
	}
	return o.CommunityUpdate, true
}

// HasCommunityUpdate returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasCommunityUpdate() bool {
	if o != nil && !IsNil(o.CommunityUpdate) {
		return true
	}

	return false
}

// SetCommunityUpdate gets a reference to the given bool and assigns it to the CommunityUpdate field.
func (o *ArticleGenericFull) SetCommunityUpdate(v bool) {
	o.CommunityUpdate = &v
}

// GetCommentPlaceholder returns the CommentPlaceholder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArticleGenericFull) GetCommentPlaceholder() string {
	if o == nil || IsNil(o.CommentPlaceholder.Get()) {
		var ret string
		return ret
	}
	return *o.CommentPlaceholder.Get()
}

// GetCommentPlaceholderOk returns a tuple with the CommentPlaceholder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArticleGenericFull) GetCommentPlaceholderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CommentPlaceholder.Get(), o.CommentPlaceholder.IsSet()
}

// HasCommentPlaceholder returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasCommentPlaceholder() bool {
	if o != nil && o.CommentPlaceholder.IsSet() {
		return true
	}

	return false
}

// SetCommentPlaceholder gets a reference to the given NullableString and assigns it to the CommentPlaceholder field.
func (o *ArticleGenericFull) SetCommentPlaceholder(v string) {
	o.CommentPlaceholder.Set(&v)
}
// SetCommentPlaceholderNil sets the value for CommentPlaceholder to be an explicit nil
func (o *ArticleGenericFull) SetCommentPlaceholderNil() {
	o.CommentPlaceholder.Set(nil)
}

// UnsetCommentPlaceholder ensures that no value is present for CommentPlaceholder, not even an explicit nil
func (o *ArticleGenericFull) UnsetCommentPlaceholder() {
	o.CommentPlaceholder.Unset()
}

// GetMetaTitle returns the MetaTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArticleGenericFull) GetMetaTitle() string {
	if o == nil || IsNil(o.MetaTitle.Get()) {
		var ret string
		return ret
	}
	return *o.MetaTitle.Get()
}

// GetMetaTitleOk returns a tuple with the MetaTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArticleGenericFull) GetMetaTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetaTitle.Get(), o.MetaTitle.IsSet()
}

// HasMetaTitle returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasMetaTitle() bool {
	if o != nil && o.MetaTitle.IsSet() {
		return true
	}

	return false
}

// SetMetaTitle gets a reference to the given NullableString and assigns it to the MetaTitle field.
func (o *ArticleGenericFull) SetMetaTitle(v string) {
	o.MetaTitle.Set(&v)
}
// SetMetaTitleNil sets the value for MetaTitle to be an explicit nil
func (o *ArticleGenericFull) SetMetaTitleNil() {
	o.MetaTitle.Set(nil)
}

// UnsetMetaTitle ensures that no value is present for MetaTitle, not even an explicit nil
func (o *ArticleGenericFull) UnsetMetaTitle() {
	o.MetaTitle.Unset()
}

// GetMetadDescription returns the MetadDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArticleGenericFull) GetMetadDescription() string {
	if o == nil || IsNil(o.MetadDescription.Get()) {
		var ret string
		return ret
	}
	return *o.MetadDescription.Get()
}

// GetMetadDescriptionOk returns a tuple with the MetadDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArticleGenericFull) GetMetadDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetadDescription.Get(), o.MetadDescription.IsSet()
}

// HasMetadDescription returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasMetadDescription() bool {
	if o != nil && o.MetadDescription.IsSet() {
		return true
	}

	return false
}

// SetMetadDescription gets a reference to the given NullableString and assigns it to the MetadDescription field.
func (o *ArticleGenericFull) SetMetadDescription(v string) {
	o.MetadDescription.Set(&v)
}
// SetMetadDescriptionNil sets the value for MetadDescription to be an explicit nil
func (o *ArticleGenericFull) SetMetadDescriptionNil() {
	o.MetadDescription.Set(nil)
}

// UnsetMetadDescription ensures that no value is present for MetadDescription, not even an explicit nil
func (o *ArticleGenericFull) UnsetMetadDescription() {
	o.MetadDescription.Unset()
}

// GetSubheading returns the Subheading field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArticleGenericFull) GetSubheading() string {
	if o == nil || IsNil(o.Subheading.Get()) {
		var ret string
		return ret
	}
	return *o.Subheading.Get()
}

// GetSubheadingOk returns a tuple with the Subheading field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArticleGenericFull) GetSubheadingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subheading.Get(), o.Subheading.IsSet()
}

// HasSubheading returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasSubheading() bool {
	if o != nil && o.Subheading.IsSet() {
		return true
	}

	return false
}

// SetSubheading gets a reference to the given NullableString and assigns it to the Subheading field.
func (o *ArticleGenericFull) SetSubheading(v string) {
	o.Subheading.Set(&v)
}
// SetSubheadingNil sets the value for Subheading to be an explicit nil
func (o *ArticleGenericFull) SetSubheadingNil() {
	o.Subheading.Set(nil)
}

// UnsetSubheading ensures that no value is present for Subheading, not even an explicit nil
func (o *ArticleGenericFull) UnsetSubheading() {
	o.Subheading.Unset()
}

// GetCoverIsMap returns the CoverIsMap field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetCoverIsMap() bool {
	if o == nil || IsNil(o.CoverIsMap) {
		var ret bool
		return ret
	}
	return *o.CoverIsMap
}

// GetCoverIsMapOk returns a tuple with the CoverIsMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetCoverIsMapOk() (*bool, bool) {
	if o == nil || IsNil(o.CoverIsMap) {
		return nil, false
	}
	return o.CoverIsMap, true
}

// HasCoverIsMap returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasCoverIsMap() bool {
	if o != nil && !IsNil(o.CoverIsMap) {
		return true
	}

	return false
}

// SetCoverIsMap gets a reference to the given bool and assigns it to the CoverIsMap field.
func (o *ArticleGenericFull) SetCoverIsMap(v bool) {
	o.CoverIsMap = &v
}

// GetIsFeaturedArticle returns the IsFeaturedArticle field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetIsFeaturedArticle() bool {
	if o == nil || IsNil(o.IsFeaturedArticle) {
		var ret bool
		return ret
	}
	return *o.IsFeaturedArticle
}

// GetIsFeaturedArticleOk returns a tuple with the IsFeaturedArticle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetIsFeaturedArticleOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFeaturedArticle) {
		return nil, false
	}
	return o.IsFeaturedArticle, true
}

// HasIsFeaturedArticle returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasIsFeaturedArticle() bool {
	if o != nil && !IsNil(o.IsFeaturedArticle) {
		return true
	}

	return false
}

// SetIsFeaturedArticle gets a reference to the given bool and assigns it to the IsFeaturedArticle field.
func (o *ArticleGenericFull) SetIsFeaturedArticle(v bool) {
	o.IsFeaturedArticle = &v
}

// GetIsAdultContent returns the IsAdultContent field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetIsAdultContent() bool {
	if o == nil || IsNil(o.IsAdultContent) {
		var ret bool
		return ret
	}
	return *o.IsAdultContent
}

// GetIsAdultContentOk returns a tuple with the IsAdultContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetIsAdultContentOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAdultContent) {
		return nil, false
	}
	return o.IsAdultContent, true
}

// HasIsAdultContent returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasIsAdultContent() bool {
	if o != nil && !IsNil(o.IsAdultContent) {
		return true
	}

	return false
}

// SetIsAdultContent gets a reference to the given bool and assigns it to the IsAdultContent field.
func (o *ArticleGenericFull) SetIsAdultContent(v bool) {
	o.IsAdultContent = &v
}

// GetIsLocked returns the IsLocked field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetIsLocked() bool {
	if o == nil || IsNil(o.IsLocked) {
		var ret bool
		return ret
	}
	return *o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetIsLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLocked) {
		return nil, false
	}
	return o.IsLocked, true
}

// HasIsLocked returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasIsLocked() bool {
	if o != nil && !IsNil(o.IsLocked) {
		return true
	}

	return false
}

// SetIsLocked gets a reference to the given bool and assigns it to the IsLocked field.
func (o *ArticleGenericFull) SetIsLocked(v bool) {
	o.IsLocked = &v
}

// GetAllowComments returns the AllowComments field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetAllowComments() bool {
	if o == nil || IsNil(o.AllowComments) {
		var ret bool
		return ret
	}
	return *o.AllowComments
}

// GetAllowCommentsOk returns a tuple with the AllowComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetAllowCommentsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowComments) {
		return nil, false
	}
	return o.AllowComments, true
}

// HasAllowComments returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasAllowComments() bool {
	if o != nil && !IsNil(o.AllowComments) {
		return true
	}

	return false
}

// SetAllowComments gets a reference to the given bool and assigns it to the AllowComments field.
func (o *ArticleGenericFull) SetAllowComments(v bool) {
	o.AllowComments = &v
}

// GetShowInToc returns the ShowInToc field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetShowInToc() bool {
	if o == nil || IsNil(o.ShowInToc) {
		var ret bool
		return ret
	}
	return *o.ShowInToc
}

// GetShowInTocOk returns a tuple with the ShowInToc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetShowInTocOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowInToc) {
		return nil, false
	}
	return o.ShowInToc, true
}

// HasShowInToc returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasShowInToc() bool {
	if o != nil && !IsNil(o.ShowInToc) {
		return true
	}

	return false
}

// SetShowInToc gets a reference to the given bool and assigns it to the ShowInToc field.
func (o *ArticleGenericFull) SetShowInToc(v bool) {
	o.ShowInToc = &v
}

// GetIsEmphasized returns the IsEmphasized field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetIsEmphasized() bool {
	if o == nil || IsNil(o.IsEmphasized) {
		var ret bool
		return ret
	}
	return *o.IsEmphasized
}

// GetIsEmphasizedOk returns a tuple with the IsEmphasized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetIsEmphasizedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEmphasized) {
		return nil, false
	}
	return o.IsEmphasized, true
}

// HasIsEmphasized returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasIsEmphasized() bool {
	if o != nil && !IsNil(o.IsEmphasized) {
		return true
	}

	return false
}

// SetIsEmphasized gets a reference to the given bool and assigns it to the IsEmphasized field.
func (o *ArticleGenericFull) SetIsEmphasized(v bool) {
	o.IsEmphasized = &v
}

// GetDisplayAuthor returns the DisplayAuthor field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetDisplayAuthor() bool {
	if o == nil || IsNil(o.DisplayAuthor) {
		var ret bool
		return ret
	}
	return *o.DisplayAuthor
}

// GetDisplayAuthorOk returns a tuple with the DisplayAuthor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetDisplayAuthorOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplayAuthor) {
		return nil, false
	}
	return o.DisplayAuthor, true
}

// HasDisplayAuthor returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasDisplayAuthor() bool {
	if o != nil && !IsNil(o.DisplayAuthor) {
		return true
	}

	return false
}

// SetDisplayAuthor gets a reference to the given bool and assigns it to the DisplayAuthor field.
func (o *ArticleGenericFull) SetDisplayAuthor(v bool) {
	o.DisplayAuthor = &v
}

// GetDisplayChildrenUnder returns the DisplayChildrenUnder field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetDisplayChildrenUnder() bool {
	if o == nil || IsNil(o.DisplayChildrenUnder) {
		var ret bool
		return ret
	}
	return *o.DisplayChildrenUnder
}

// GetDisplayChildrenUnderOk returns a tuple with the DisplayChildrenUnder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetDisplayChildrenUnderOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplayChildrenUnder) {
		return nil, false
	}
	return o.DisplayChildrenUnder, true
}

// HasDisplayChildrenUnder returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasDisplayChildrenUnder() bool {
	if o != nil && !IsNil(o.DisplayChildrenUnder) {
		return true
	}

	return false
}

// SetDisplayChildrenUnder gets a reference to the given bool and assigns it to the DisplayChildrenUnder field.
func (o *ArticleGenericFull) SetDisplayChildrenUnder(v bool) {
	o.DisplayChildrenUnder = &v
}

// GetDisplayTitle returns the DisplayTitle field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetDisplayTitle() bool {
	if o == nil || IsNil(o.DisplayTitle) {
		var ret bool
		return ret
	}
	return *o.DisplayTitle
}

// GetDisplayTitleOk returns a tuple with the DisplayTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetDisplayTitleOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplayTitle) {
		return nil, false
	}
	return o.DisplayTitle, true
}

// HasDisplayTitle returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasDisplayTitle() bool {
	if o != nil && !IsNil(o.DisplayTitle) {
		return true
	}

	return false
}

// SetDisplayTitle gets a reference to the given bool and assigns it to the DisplayTitle field.
func (o *ArticleGenericFull) SetDisplayTitle(v bool) {
	o.DisplayTitle = &v
}

// GetDisplaySheet returns the DisplaySheet field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetDisplaySheet() bool {
	if o == nil || IsNil(o.DisplaySheet) {
		var ret bool
		return ret
	}
	return *o.DisplaySheet
}

// GetDisplaySheetOk returns a tuple with the DisplaySheet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetDisplaySheetOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplaySheet) {
		return nil, false
	}
	return o.DisplaySheet, true
}

// HasDisplaySheet returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasDisplaySheet() bool {
	if o != nil && !IsNil(o.DisplaySheet) {
		return true
	}

	return false
}

// SetDisplaySheet gets a reference to the given bool and assigns it to the DisplaySheet field.
func (o *ArticleGenericFull) SetDisplaySheet(v bool) {
	o.DisplaySheet = &v
}

// GetBadge returns the Badge field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArticleGenericFull) GetBadge() string {
	if o == nil || IsNil(o.Badge.Get()) {
		var ret string
		return ret
	}
	return *o.Badge.Get()
}

// GetBadgeOk returns a tuple with the Badge field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArticleGenericFull) GetBadgeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Badge.Get(), o.Badge.IsSet()
}

// HasBadge returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasBadge() bool {
	if o != nil && o.Badge.IsSet() {
		return true
	}

	return false
}

// SetBadge gets a reference to the given NullableString and assigns it to the Badge field.
func (o *ArticleGenericFull) SetBadge(v string) {
	o.Badge.Set(&v)
}
// SetBadgeNil sets the value for Badge to be an explicit nil
func (o *ArticleGenericFull) SetBadgeNil() {
	o.Badge.Set(nil)
}

// UnsetBadge ensures that no value is present for Badge, not even an explicit nil
func (o *ArticleGenericFull) UnsetBadge() {
	o.Badge.Unset()
}

// GetSecrets returns the Secrets field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetSecrets() []Object {
	if o == nil || IsNil(o.Secrets) {
		var ret []Object
		return ret
	}
	return o.Secrets
}

// GetSecretsOk returns a tuple with the Secrets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetSecretsOk() ([]Object, bool) {
	if o == nil || IsNil(o.Secrets) {
		return nil, false
	}
	return o.Secrets, true
}

// HasSecrets returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasSecrets() bool {
	if o != nil && !IsNil(o.Secrets) {
		return true
	}

	return false
}

// SetSecrets gets a reference to the given []Object and assigns it to the Secrets field.
func (o *ArticleGenericFull) SetSecrets(v []Object) {
	o.Secrets = v
}

// GetHistories returns the Histories field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetHistories() []Object {
	if o == nil || IsNil(o.Histories) {
		var ret []Object
		return ret
	}
	return o.Histories
}

// GetHistoriesOk returns a tuple with the Histories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetHistoriesOk() ([]Object, bool) {
	if o == nil || IsNil(o.Histories) {
		return nil, false
	}
	return o.Histories, true
}

// HasHistories returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasHistories() bool {
	if o != nil && !IsNil(o.Histories) {
		return true
	}

	return false
}

// SetHistories gets a reference to the given []Object and assigns it to the Histories field.
func (o *ArticleGenericFull) SetHistories(v []Object) {
	o.Histories = v
}

// GetEditURL returns the EditURL field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetEditURL() string {
	if o == nil || IsNil(o.EditURL) {
		var ret string
		return ret
	}
	return *o.EditURL
}

// GetEditURLOk returns a tuple with the EditURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetEditURLOk() (*string, bool) {
	if o == nil || IsNil(o.EditURL) {
		return nil, false
	}
	return o.EditURL, true
}

// HasEditURL returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasEditURL() bool {
	if o != nil && !IsNil(o.EditURL) {
		return true
	}

	return false
}

// SetEditURL gets a reference to the given string and assigns it to the EditURL field.
func (o *ArticleGenericFull) SetEditURL(v string) {
	o.EditURL = &v
}

// GetCover returns the Cover field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetCover() Object {
	if o == nil || IsNil(o.Cover) {
		var ret Object
		return ret
	}
	return *o.Cover
}

// GetCoverOk returns a tuple with the Cover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetCoverOk() (*Object, bool) {
	if o == nil || IsNil(o.Cover) {
		return nil, false
	}
	return o.Cover, true
}

// HasCover returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasCover() bool {
	if o != nil && !IsNil(o.Cover) {
		return true
	}

	return false
}

// SetCover gets a reference to the given Object and assigns it to the Cover field.
func (o *ArticleGenericFull) SetCover(v Object) {
	o.Cover = &v
}

// GetGallery returns the Gallery field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetGallery() interface{} {
	if o == nil || IsNil(o.Gallery) {
		var ret interface{}
		return ret
	}
	return *o.Gallery
}

// GetGalleryOk returns a tuple with the Gallery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetGalleryOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Gallery) {
		return nil, false
	}
	return o.Gallery, true
}

// HasGallery returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasGallery() bool {
	if o != nil && !IsNil(o.Gallery) {
		return true
	}

	return false
}

// SetGallery gets a reference to the given interface{} and assigns it to the Gallery field.
func (o *ArticleGenericFull) SetGallery(v interface{}) {
	o.Gallery = &v
}

// GetArticleNext returns the ArticleNext field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetArticleNext() string {
	if o == nil || IsNil(o.ArticleNext) {
		var ret string
		return ret
	}
	return *o.ArticleNext
}

// GetArticleNextOk returns a tuple with the ArticleNext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetArticleNextOk() (*string, bool) {
	if o == nil || IsNil(o.ArticleNext) {
		return nil, false
	}
	return o.ArticleNext, true
}

// HasArticleNext returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasArticleNext() bool {
	if o != nil && !IsNil(o.ArticleNext) {
		return true
	}

	return false
}

// SetArticleNext gets a reference to the given string and assigns it to the ArticleNext field.
func (o *ArticleGenericFull) SetArticleNext(v string) {
	o.ArticleNext = &v
}

// GetArticlePrevious returns the ArticlePrevious field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetArticlePrevious() string {
	if o == nil || IsNil(o.ArticlePrevious) {
		var ret string
		return ret
	}
	return *o.ArticlePrevious
}

// GetArticlePreviousOk returns a tuple with the ArticlePrevious field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetArticlePreviousOk() (*string, bool) {
	if o == nil || IsNil(o.ArticlePrevious) {
		return nil, false
	}
	return o.ArticlePrevious, true
}

// HasArticlePrevious returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasArticlePrevious() bool {
	if o != nil && !IsNil(o.ArticlePrevious) {
		return true
	}

	return false
}

// SetArticlePrevious gets a reference to the given string and assigns it to the ArticlePrevious field.
func (o *ArticleGenericFull) SetArticlePrevious(v string) {
	o.ArticlePrevious = &v
}

// GetBlock returns the Block field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetBlock() interface{} {
	if o == nil || IsNil(o.Block) {
		var ret interface{}
		return ret
	}
	return *o.Block
}

// GetBlockOk returns a tuple with the Block field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetBlockOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Block) {
		return nil, false
	}
	return o.Block, true
}

// HasBlock returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasBlock() bool {
	if o != nil && !IsNil(o.Block) {
		return true
	}

	return false
}

// SetBlock gets a reference to the given interface{} and assigns it to the Block field.
func (o *ArticleGenericFull) SetBlock(v interface{}) {
	o.Block = &v
}

// GetOrgchart returns the Orgchart field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetOrgchart() interface{} {
	if o == nil || IsNil(o.Orgchart) {
		var ret interface{}
		return ret
	}
	return *o.Orgchart
}

// GetOrgchartOk returns a tuple with the Orgchart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetOrgchartOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Orgchart) {
		return nil, false
	}
	return o.Orgchart, true
}

// HasOrgchart returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasOrgchart() bool {
	if o != nil && !IsNil(o.Orgchart) {
		return true
	}

	return false
}

// SetOrgchart gets a reference to the given interface{} and assigns it to the Orgchart field.
func (o *ArticleGenericFull) SetOrgchart(v interface{}) {
	o.Orgchart = &v
}

// GetManuscripts returns the Manuscripts field value if set, zero value otherwise.
func (o *ArticleGenericFull) GetManuscripts() []Object {
	if o == nil || IsNil(o.Manuscripts) {
		var ret []Object
		return ret
	}
	return o.Manuscripts
}

// GetManuscriptsOk returns a tuple with the Manuscripts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFull) GetManuscriptsOk() ([]Object, bool) {
	if o == nil || IsNil(o.Manuscripts) {
		return nil, false
	}
	return o.Manuscripts, true
}

// HasManuscripts returns a boolean if a field has been set.
func (o *ArticleGenericFull) HasManuscripts() bool {
	if o != nil && !IsNil(o.Manuscripts) {
		return true
	}

	return false
}

// SetManuscripts gets a reference to the given []Object and assigns it to the Manuscripts field.
func (o *ArticleGenericFull) SetManuscripts(v []Object) {
	o.Manuscripts = v
}

func (o ArticleGenericFull) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArticleGenericFull) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.IsWip) {
		toSerialize["isWip"] = o.IsWip
	}
	if !IsNil(o.IsDraft) {
		toSerialize["isDraft"] = o.IsDraft
	}
	if !IsNil(o.EntityClass) {
		toSerialize["entityClass"] = o.EntityClass
	}
	if o.Icon.IsSet() {
		toSerialize["icon"] = o.Icon.Get()
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.FolderId) {
		toSerialize["folderId"] = o.FolderId
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.UpdateDate) {
		toSerialize["updateDate"] = o.UpdateDate
	}
	if !IsNil(o.Subscribergroups) {
		toSerialize["subscribergroups"] = o.Subscribergroups
	}
	if !IsNil(o.IsEditable) {
		toSerialize["isEditable"] = o.IsEditable
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	if !IsNil(o.Excerpt) {
		toSerialize["excerpt"] = o.Excerpt
	}
	if !IsNil(o.Wordcount) {
		toSerialize["wordcount"] = o.Wordcount
	}
	if !IsNil(o.CreationDate) {
		toSerialize["creationDate"] = o.CreationDate
	}
	if !IsNil(o.PublicationDate) {
		toSerialize["publicationDate"] = o.PublicationDate
	}
	if !IsNil(o.NotificationDate) {
		toSerialize["notificationDate"] = o.NotificationDate
	}
	if !IsNil(o.Likes) {
		toSerialize["likes"] = o.Likes
	}
	if !IsNil(o.Views) {
		toSerialize["views"] = o.Views
	}
	if o.UserMetadata != nil {
		toSerialize["userMetadata"] = o.UserMetadata
	}
	if o.ArticleMetadata != nil {
		toSerialize["articleMetadata"] = o.ArticleMetadata
	}
	if !IsNil(o.CssClasses) {
		toSerialize["cssClasses"] = o.CssClasses
	}
	if !IsNil(o.DisplayCss) {
		toSerialize["displayCss"] = o.DisplayCss
	}
	if !IsNil(o.TemplateType) {
		toSerialize["templateType"] = o.TemplateType
	}
	if o.CustomArticleTemplate.IsSet() {
		toSerialize["customArticleTemplate"] = o.CustomArticleTemplate.Get()
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.World) {
		toSerialize["world"] = o.World
	}
	if !IsNil(o.Pronunciation) {
		toSerialize["pronunciation"] = o.Pronunciation
	}
	if !IsNil(o.Snippet) {
		toSerialize["snippet"] = o.Snippet
	}
	if !IsNil(o.Seeded) {
		toSerialize["seeded"] = o.Seeded
	}
	if !IsNil(o.Sidebarcontent) {
		toSerialize["sidebarcontent"] = o.Sidebarcontent
	}
	if !IsNil(o.Sidepanelcontenttop) {
		toSerialize["sidepanelcontenttop"] = o.Sidepanelcontenttop
	}
	if !IsNil(o.Sidepanelcontent) {
		toSerialize["sidepanelcontent"] = o.Sidepanelcontent
	}
	if !IsNil(o.Sidebarcontentbottom) {
		toSerialize["sidebarcontentbottom"] = o.Sidebarcontentbottom
	}
	if !IsNil(o.Footnotes) {
		toSerialize["footnotes"] = o.Footnotes
	}
	if !IsNil(o.Fullfooter) {
		toSerialize["fullfooter"] = o.Fullfooter
	}
	if !IsNil(o.Authornotes) {
		toSerialize["authornotes"] = o.Authornotes
	}
	if !IsNil(o.Scrapbook) {
		toSerialize["scrapbook"] = o.Scrapbook
	}
	if !IsNil(o.Credits) {
		toSerialize["credits"] = o.Credits
	}
	if !IsNil(o.DisplaySidebar) {
		toSerialize["displaySidebar"] = o.DisplaySidebar
	}
	if !IsNil(o.Timeline) {
		toSerialize["timeline"] = o.Timeline
	}
	if !IsNil(o.Prompt) {
		toSerialize["prompt"] = o.Prompt
	}
	if !IsNil(o.ShowSeeded) {
		toSerialize["showSeeded"] = o.ShowSeeded
	}
	if !IsNil(o.WebhookUpdate) {
		toSerialize["webhookUpdate"] = o.WebhookUpdate
	}
	if !IsNil(o.CommunityUpdate) {
		toSerialize["communityUpdate"] = o.CommunityUpdate
	}
	if o.CommentPlaceholder.IsSet() {
		toSerialize["commentPlaceholder"] = o.CommentPlaceholder.Get()
	}
	if o.MetaTitle.IsSet() {
		toSerialize["metaTitle"] = o.MetaTitle.Get()
	}
	if o.MetadDescription.IsSet() {
		toSerialize["metadDescription"] = o.MetadDescription.Get()
	}
	if o.Subheading.IsSet() {
		toSerialize["subheading"] = o.Subheading.Get()
	}
	if !IsNil(o.CoverIsMap) {
		toSerialize["coverIsMap"] = o.CoverIsMap
	}
	if !IsNil(o.IsFeaturedArticle) {
		toSerialize["isFeaturedArticle"] = o.IsFeaturedArticle
	}
	if !IsNil(o.IsAdultContent) {
		toSerialize["isAdultContent"] = o.IsAdultContent
	}
	if !IsNil(o.IsLocked) {
		toSerialize["isLocked"] = o.IsLocked
	}
	if !IsNil(o.AllowComments) {
		toSerialize["allowComments"] = o.AllowComments
	}
	if !IsNil(o.ShowInToc) {
		toSerialize["showInToc"] = o.ShowInToc
	}
	if !IsNil(o.IsEmphasized) {
		toSerialize["isEmphasized"] = o.IsEmphasized
	}
	if !IsNil(o.DisplayAuthor) {
		toSerialize["displayAuthor"] = o.DisplayAuthor
	}
	if !IsNil(o.DisplayChildrenUnder) {
		toSerialize["displayChildrenUnder"] = o.DisplayChildrenUnder
	}
	if !IsNil(o.DisplayTitle) {
		toSerialize["displayTitle"] = o.DisplayTitle
	}
	if !IsNil(o.DisplaySheet) {
		toSerialize["displaySheet"] = o.DisplaySheet
	}
	if o.Badge.IsSet() {
		toSerialize["badge"] = o.Badge.Get()
	}
	if !IsNil(o.Secrets) {
		toSerialize["secrets"] = o.Secrets
	}
	if !IsNil(o.Histories) {
		toSerialize["histories"] = o.Histories
	}
	if !IsNil(o.EditURL) {
		toSerialize["editURL"] = o.EditURL
	}
	if !IsNil(o.Cover) {
		toSerialize["cover"] = o.Cover
	}
	if !IsNil(o.Gallery) {
		toSerialize["gallery"] = o.Gallery
	}
	if !IsNil(o.ArticleNext) {
		toSerialize["articleNext"] = o.ArticleNext
	}
	if !IsNil(o.ArticlePrevious) {
		toSerialize["articlePrevious"] = o.ArticlePrevious
	}
	if !IsNil(o.Block) {
		toSerialize["block"] = o.Block
	}
	if !IsNil(o.Orgchart) {
		toSerialize["orgchart"] = o.Orgchart
	}
	if !IsNil(o.Manuscripts) {
		toSerialize["manuscripts"] = o.Manuscripts
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ArticleGenericFull) UnmarshalJSON(data []byte) (err error) {
	varArticleGenericFull := _ArticleGenericFull{}

	err = json.Unmarshal(data, &varArticleGenericFull)

	if err != nil {
		return err
	}

	*o = ArticleGenericFull(varArticleGenericFull)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "title")
		delete(additionalProperties, "slug")
		delete(additionalProperties, "state")
		delete(additionalProperties, "isWip")
		delete(additionalProperties, "isDraft")
		delete(additionalProperties, "entityClass")
		delete(additionalProperties, "icon")
		delete(additionalProperties, "url")
		delete(additionalProperties, "folderId")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "updateDate")
		delete(additionalProperties, "subscribergroups")
		delete(additionalProperties, "isEditable")
		delete(additionalProperties, "success")
		delete(additionalProperties, "position")
		delete(additionalProperties, "excerpt")
		delete(additionalProperties, "wordcount")
		delete(additionalProperties, "creationDate")
		delete(additionalProperties, "publicationDate")
		delete(additionalProperties, "notificationDate")
		delete(additionalProperties, "likes")
		delete(additionalProperties, "views")
		delete(additionalProperties, "userMetadata")
		delete(additionalProperties, "articleMetadata")
		delete(additionalProperties, "cssClasses")
		delete(additionalProperties, "displayCss")
		delete(additionalProperties, "templateType")
		delete(additionalProperties, "customArticleTemplate")
		delete(additionalProperties, "content")
		delete(additionalProperties, "author")
		delete(additionalProperties, "category")
		delete(additionalProperties, "world")
		delete(additionalProperties, "pronunciation")
		delete(additionalProperties, "snippet")
		delete(additionalProperties, "seeded")
		delete(additionalProperties, "sidebarcontent")
		delete(additionalProperties, "sidepanelcontenttop")
		delete(additionalProperties, "sidepanelcontent")
		delete(additionalProperties, "sidebarcontentbottom")
		delete(additionalProperties, "footnotes")
		delete(additionalProperties, "fullfooter")
		delete(additionalProperties, "authornotes")
		delete(additionalProperties, "scrapbook")
		delete(additionalProperties, "credits")
		delete(additionalProperties, "displaySidebar")
		delete(additionalProperties, "timeline")
		delete(additionalProperties, "prompt")
		delete(additionalProperties, "showSeeded")
		delete(additionalProperties, "webhookUpdate")
		delete(additionalProperties, "communityUpdate")
		delete(additionalProperties, "commentPlaceholder")
		delete(additionalProperties, "metaTitle")
		delete(additionalProperties, "metadDescription")
		delete(additionalProperties, "subheading")
		delete(additionalProperties, "coverIsMap")
		delete(additionalProperties, "isFeaturedArticle")
		delete(additionalProperties, "isAdultContent")
		delete(additionalProperties, "isLocked")
		delete(additionalProperties, "allowComments")
		delete(additionalProperties, "showInToc")
		delete(additionalProperties, "isEmphasized")
		delete(additionalProperties, "displayAuthor")
		delete(additionalProperties, "displayChildrenUnder")
		delete(additionalProperties, "displayTitle")
		delete(additionalProperties, "displaySheet")
		delete(additionalProperties, "badge")
		delete(additionalProperties, "secrets")
		delete(additionalProperties, "histories")
		delete(additionalProperties, "editURL")
		delete(additionalProperties, "cover")
		delete(additionalProperties, "gallery")
		delete(additionalProperties, "articleNext")
		delete(additionalProperties, "articlePrevious")
		delete(additionalProperties, "block")
		delete(additionalProperties, "orgchart")
		delete(additionalProperties, "manuscripts")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableArticleGenericFull struct {
	value *ArticleGenericFull
	isSet bool
}

func (v NullableArticleGenericFull) Get() *ArticleGenericFull {
	return v.value
}

func (v *NullableArticleGenericFull) Set(val *ArticleGenericFull) {
	v.value = val
	v.isSet = true
}

func (v NullableArticleGenericFull) IsSet() bool {
	return v.isSet
}

func (v *NullableArticleGenericFull) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArticleGenericFull(val *ArticleGenericFull) *NullableArticleGenericFull {
	return &NullableArticleGenericFull{value: val, isSet: true}
}

func (v NullableArticleGenericFull) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArticleGenericFull) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


