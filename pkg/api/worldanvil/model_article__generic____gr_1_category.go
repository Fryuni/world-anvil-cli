/*
World Anvil Public API Documentation

Welcome to the World Anvil Public API Documentation. This API provides developers and World Anvil users with programmatic access to the extensive features of the World Anvil worldbuilding platform. Whether you're building integrations, automating tasks, or creating custom experiences, this API empowers you to interact with your worldbuilding data seamlessly.

API version: 2.0.0 - Boromir
Contact: contact@worldanvil.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package worldanvil

import (
	"encoding/json"
)

// checks if the ArticleGenericGR1Category type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArticleGenericGR1Category{}

// ArticleGenericGR1Category struct for ArticleGenericGR1Category
type ArticleGenericGR1Category struct {
	AdditionalProperties map[string]interface{}
}

type _ArticleGenericGR1Category ArticleGenericGR1Category

// NewArticleGenericGR1Category instantiates a new ArticleGenericGR1Category object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArticleGenericGR1Category() *ArticleGenericGR1Category {
	this := ArticleGenericGR1Category{}
	return &this
}

// NewArticleGenericGR1CategoryWithDefaults instantiates a new ArticleGenericGR1Category object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArticleGenericGR1CategoryWithDefaults() *ArticleGenericGR1Category {
	this := ArticleGenericGR1Category{}
	return &this
}

func (o ArticleGenericGR1Category) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArticleGenericGR1Category) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ArticleGenericGR1Category) UnmarshalJSON(data []byte) (err error) {
	varArticleGenericGR1Category := _ArticleGenericGR1Category{}

	err = json.Unmarshal(data, &varArticleGenericGR1Category)

	if err != nil {
		return err
	}

	*o = ArticleGenericGR1Category(varArticleGenericGR1Category)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableArticleGenericGR1Category struct {
	value *ArticleGenericGR1Category
	isSet bool
}

func (v NullableArticleGenericGR1Category) Get() *ArticleGenericGR1Category {
	return v.value
}

func (v *NullableArticleGenericGR1Category) Set(val *ArticleGenericGR1Category) {
	v.value = val
	v.isSet = true
}

func (v NullableArticleGenericGR1Category) IsSet() bool {
	return v.isSet
}

func (v *NullableArticleGenericGR1Category) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArticleGenericGR1Category(val *ArticleGenericGR1Category) *NullableArticleGenericGR1Category {
	return &NullableArticleGenericGR1Category{value: val, isSet: true}
}

func (v NullableArticleGenericGR1Category) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArticleGenericGR1Category) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


