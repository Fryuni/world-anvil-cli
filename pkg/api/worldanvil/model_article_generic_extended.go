/*
World Anvil Public API Documentation

Welcome to the World Anvil Public API Documentation. This API provides developers and World Anvil users with programmatic access to the extensive features of the World Anvil worldbuilding platform. Whether you're building integrations, automating tasks, or creating custom experiences, this API empowers you to interact with your worldbuilding data seamlessly.

API version: 2.0.0 - Boromir
Contact: contact@worldanvil.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package worldanvil

import (
	"encoding/json"
)

// checks if the ArticleGenericExtended type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArticleGenericExtended{}

// ArticleGenericExtended struct for ArticleGenericExtended
type ArticleGenericExtended struct {
	Id *string `json:"id,omitempty"`
	Title *string `json:"title,omitempty"`
	Slug *string `json:"slug,omitempty"`
	State *string `json:"state,omitempty"`
	IsWip *bool `json:"isWip,omitempty"`
	IsDraft *bool `json:"isDraft,omitempty"`
	EntityClass *string `json:"entityClass,omitempty"`
	Icon NullableString `json:"icon,omitempty"`
	Url *string `json:"url,omitempty"`
	FolderId *string `json:"folderId,omitempty"`
	Tags *string `json:"tags,omitempty"`
	UpdateDate *Object `json:"updateDate,omitempty"`
	Subscribergroups []Object `json:"subscribergroups,omitempty"`
	IsEditable *bool `json:"isEditable,omitempty"`
	Success *bool `json:"success,omitempty"`
	Position *int32 `json:"position,omitempty"`
	Excerpt *string `json:"excerpt,omitempty"`
	Wordcount *int32 `json:"wordcount,omitempty"`
	CreationDate *Object `json:"creationDate,omitempty"`
	PublicationDate *Object `json:"publicationDate,omitempty"`
	NotificationDate *Object `json:"notificationDate,omitempty"`
	Likes []Object `json:"likes,omitempty"`
	Views *int32 `json:"views,omitempty"`
	UserMetadata interface{} `json:"userMetadata,omitempty"`
	ArticleMetadata interface{} `json:"articleMetadata,omitempty"`
	CssClasses *string `json:"cssClasses,omitempty"`
	DisplayCss *string `json:"displayCss,omitempty"`
	TemplateType *string `json:"templateType,omitempty"`
	CustomArticleTemplate NullableString `json:"customArticleTemplate,omitempty"`
	Content *string `json:"content,omitempty"`
	Author *Object `json:"author,omitempty"`
	Category *ArticleGenericGR1Category `json:"category,omitempty"`
	World *Object `json:"world,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ArticleGenericExtended ArticleGenericExtended

// NewArticleGenericExtended instantiates a new ArticleGenericExtended object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArticleGenericExtended() *ArticleGenericExtended {
	this := ArticleGenericExtended{}
	return &this
}

// NewArticleGenericExtendedWithDefaults instantiates a new ArticleGenericExtended object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArticleGenericExtendedWithDefaults() *ArticleGenericExtended {
	this := ArticleGenericExtended{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ArticleGenericExtended) SetId(v string) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ArticleGenericExtended) SetTitle(v string) {
	o.Title = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *ArticleGenericExtended) SetSlug(v string) {
	o.Slug = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ArticleGenericExtended) SetState(v string) {
	o.State = &v
}

// GetIsWip returns the IsWip field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetIsWip() bool {
	if o == nil || IsNil(o.IsWip) {
		var ret bool
		return ret
	}
	return *o.IsWip
}

// GetIsWipOk returns a tuple with the IsWip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetIsWipOk() (*bool, bool) {
	if o == nil || IsNil(o.IsWip) {
		return nil, false
	}
	return o.IsWip, true
}

// HasIsWip returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasIsWip() bool {
	if o != nil && !IsNil(o.IsWip) {
		return true
	}

	return false
}

// SetIsWip gets a reference to the given bool and assigns it to the IsWip field.
func (o *ArticleGenericExtended) SetIsWip(v bool) {
	o.IsWip = &v
}

// GetIsDraft returns the IsDraft field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetIsDraft() bool {
	if o == nil || IsNil(o.IsDraft) {
		var ret bool
		return ret
	}
	return *o.IsDraft
}

// GetIsDraftOk returns a tuple with the IsDraft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetIsDraftOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDraft) {
		return nil, false
	}
	return o.IsDraft, true
}

// HasIsDraft returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasIsDraft() bool {
	if o != nil && !IsNil(o.IsDraft) {
		return true
	}

	return false
}

// SetIsDraft gets a reference to the given bool and assigns it to the IsDraft field.
func (o *ArticleGenericExtended) SetIsDraft(v bool) {
	o.IsDraft = &v
}

// GetEntityClass returns the EntityClass field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetEntityClass() string {
	if o == nil || IsNil(o.EntityClass) {
		var ret string
		return ret
	}
	return *o.EntityClass
}

// GetEntityClassOk returns a tuple with the EntityClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetEntityClassOk() (*string, bool) {
	if o == nil || IsNil(o.EntityClass) {
		return nil, false
	}
	return o.EntityClass, true
}

// HasEntityClass returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasEntityClass() bool {
	if o != nil && !IsNil(o.EntityClass) {
		return true
	}

	return false
}

// SetEntityClass gets a reference to the given string and assigns it to the EntityClass field.
func (o *ArticleGenericExtended) SetEntityClass(v string) {
	o.EntityClass = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArticleGenericExtended) GetIcon() string {
	if o == nil || IsNil(o.Icon.Get()) {
		var ret string
		return ret
	}
	return *o.Icon.Get()
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArticleGenericExtended) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Icon.Get(), o.Icon.IsSet()
}

// HasIcon returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasIcon() bool {
	if o != nil && o.Icon.IsSet() {
		return true
	}

	return false
}

// SetIcon gets a reference to the given NullableString and assigns it to the Icon field.
func (o *ArticleGenericExtended) SetIcon(v string) {
	o.Icon.Set(&v)
}
// SetIconNil sets the value for Icon to be an explicit nil
func (o *ArticleGenericExtended) SetIconNil() {
	o.Icon.Set(nil)
}

// UnsetIcon ensures that no value is present for Icon, not even an explicit nil
func (o *ArticleGenericExtended) UnsetIcon() {
	o.Icon.Unset()
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ArticleGenericExtended) SetUrl(v string) {
	o.Url = &v
}

// GetFolderId returns the FolderId field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetFolderId() string {
	if o == nil || IsNil(o.FolderId) {
		var ret string
		return ret
	}
	return *o.FolderId
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetFolderIdOk() (*string, bool) {
	if o == nil || IsNil(o.FolderId) {
		return nil, false
	}
	return o.FolderId, true
}

// HasFolderId returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasFolderId() bool {
	if o != nil && !IsNil(o.FolderId) {
		return true
	}

	return false
}

// SetFolderId gets a reference to the given string and assigns it to the FolderId field.
func (o *ArticleGenericExtended) SetFolderId(v string) {
	o.FolderId = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetTags() string {
	if o == nil || IsNil(o.Tags) {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetTagsOk() (*string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *ArticleGenericExtended) SetTags(v string) {
	o.Tags = &v
}

// GetUpdateDate returns the UpdateDate field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetUpdateDate() Object {
	if o == nil || IsNil(o.UpdateDate) {
		var ret Object
		return ret
	}
	return *o.UpdateDate
}

// GetUpdateDateOk returns a tuple with the UpdateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetUpdateDateOk() (*Object, bool) {
	if o == nil || IsNil(o.UpdateDate) {
		return nil, false
	}
	return o.UpdateDate, true
}

// HasUpdateDate returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasUpdateDate() bool {
	if o != nil && !IsNil(o.UpdateDate) {
		return true
	}

	return false
}

// SetUpdateDate gets a reference to the given Object and assigns it to the UpdateDate field.
func (o *ArticleGenericExtended) SetUpdateDate(v Object) {
	o.UpdateDate = &v
}

// GetSubscribergroups returns the Subscribergroups field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetSubscribergroups() []Object {
	if o == nil || IsNil(o.Subscribergroups) {
		var ret []Object
		return ret
	}
	return o.Subscribergroups
}

// GetSubscribergroupsOk returns a tuple with the Subscribergroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetSubscribergroupsOk() ([]Object, bool) {
	if o == nil || IsNil(o.Subscribergroups) {
		return nil, false
	}
	return o.Subscribergroups, true
}

// HasSubscribergroups returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasSubscribergroups() bool {
	if o != nil && !IsNil(o.Subscribergroups) {
		return true
	}

	return false
}

// SetSubscribergroups gets a reference to the given []Object and assigns it to the Subscribergroups field.
func (o *ArticleGenericExtended) SetSubscribergroups(v []Object) {
	o.Subscribergroups = v
}

// GetIsEditable returns the IsEditable field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetIsEditable() bool {
	if o == nil || IsNil(o.IsEditable) {
		var ret bool
		return ret
	}
	return *o.IsEditable
}

// GetIsEditableOk returns a tuple with the IsEditable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetIsEditableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEditable) {
		return nil, false
	}
	return o.IsEditable, true
}

// HasIsEditable returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasIsEditable() bool {
	if o != nil && !IsNil(o.IsEditable) {
		return true
	}

	return false
}

// SetIsEditable gets a reference to the given bool and assigns it to the IsEditable field.
func (o *ArticleGenericExtended) SetIsEditable(v bool) {
	o.IsEditable = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *ArticleGenericExtended) SetSuccess(v bool) {
	o.Success = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetPosition() int32 {
	if o == nil || IsNil(o.Position) {
		var ret int32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetPositionOk() (*int32, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int32 and assigns it to the Position field.
func (o *ArticleGenericExtended) SetPosition(v int32) {
	o.Position = &v
}

// GetExcerpt returns the Excerpt field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetExcerpt() string {
	if o == nil || IsNil(o.Excerpt) {
		var ret string
		return ret
	}
	return *o.Excerpt
}

// GetExcerptOk returns a tuple with the Excerpt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetExcerptOk() (*string, bool) {
	if o == nil || IsNil(o.Excerpt) {
		return nil, false
	}
	return o.Excerpt, true
}

// HasExcerpt returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasExcerpt() bool {
	if o != nil && !IsNil(o.Excerpt) {
		return true
	}

	return false
}

// SetExcerpt gets a reference to the given string and assigns it to the Excerpt field.
func (o *ArticleGenericExtended) SetExcerpt(v string) {
	o.Excerpt = &v
}

// GetWordcount returns the Wordcount field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetWordcount() int32 {
	if o == nil || IsNil(o.Wordcount) {
		var ret int32
		return ret
	}
	return *o.Wordcount
}

// GetWordcountOk returns a tuple with the Wordcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetWordcountOk() (*int32, bool) {
	if o == nil || IsNil(o.Wordcount) {
		return nil, false
	}
	return o.Wordcount, true
}

// HasWordcount returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasWordcount() bool {
	if o != nil && !IsNil(o.Wordcount) {
		return true
	}

	return false
}

// SetWordcount gets a reference to the given int32 and assigns it to the Wordcount field.
func (o *ArticleGenericExtended) SetWordcount(v int32) {
	o.Wordcount = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetCreationDate() Object {
	if o == nil || IsNil(o.CreationDate) {
		var ret Object
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetCreationDateOk() (*Object, bool) {
	if o == nil || IsNil(o.CreationDate) {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasCreationDate() bool {
	if o != nil && !IsNil(o.CreationDate) {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given Object and assigns it to the CreationDate field.
func (o *ArticleGenericExtended) SetCreationDate(v Object) {
	o.CreationDate = &v
}

// GetPublicationDate returns the PublicationDate field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetPublicationDate() Object {
	if o == nil || IsNil(o.PublicationDate) {
		var ret Object
		return ret
	}
	return *o.PublicationDate
}

// GetPublicationDateOk returns a tuple with the PublicationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetPublicationDateOk() (*Object, bool) {
	if o == nil || IsNil(o.PublicationDate) {
		return nil, false
	}
	return o.PublicationDate, true
}

// HasPublicationDate returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasPublicationDate() bool {
	if o != nil && !IsNil(o.PublicationDate) {
		return true
	}

	return false
}

// SetPublicationDate gets a reference to the given Object and assigns it to the PublicationDate field.
func (o *ArticleGenericExtended) SetPublicationDate(v Object) {
	o.PublicationDate = &v
}

// GetNotificationDate returns the NotificationDate field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetNotificationDate() Object {
	if o == nil || IsNil(o.NotificationDate) {
		var ret Object
		return ret
	}
	return *o.NotificationDate
}

// GetNotificationDateOk returns a tuple with the NotificationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetNotificationDateOk() (*Object, bool) {
	if o == nil || IsNil(o.NotificationDate) {
		return nil, false
	}
	return o.NotificationDate, true
}

// HasNotificationDate returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasNotificationDate() bool {
	if o != nil && !IsNil(o.NotificationDate) {
		return true
	}

	return false
}

// SetNotificationDate gets a reference to the given Object and assigns it to the NotificationDate field.
func (o *ArticleGenericExtended) SetNotificationDate(v Object) {
	o.NotificationDate = &v
}

// GetLikes returns the Likes field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetLikes() []Object {
	if o == nil || IsNil(o.Likes) {
		var ret []Object
		return ret
	}
	return o.Likes
}

// GetLikesOk returns a tuple with the Likes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetLikesOk() ([]Object, bool) {
	if o == nil || IsNil(o.Likes) {
		return nil, false
	}
	return o.Likes, true
}

// HasLikes returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasLikes() bool {
	if o != nil && !IsNil(o.Likes) {
		return true
	}

	return false
}

// SetLikes gets a reference to the given []Object and assigns it to the Likes field.
func (o *ArticleGenericExtended) SetLikes(v []Object) {
	o.Likes = v
}

// GetViews returns the Views field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetViews() int32 {
	if o == nil || IsNil(o.Views) {
		var ret int32
		return ret
	}
	return *o.Views
}

// GetViewsOk returns a tuple with the Views field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetViewsOk() (*int32, bool) {
	if o == nil || IsNil(o.Views) {
		return nil, false
	}
	return o.Views, true
}

// HasViews returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasViews() bool {
	if o != nil && !IsNil(o.Views) {
		return true
	}

	return false
}

// SetViews gets a reference to the given int32 and assigns it to the Views field.
func (o *ArticleGenericExtended) SetViews(v int32) {
	o.Views = &v
}

// GetUserMetadata returns the UserMetadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArticleGenericExtended) GetUserMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.UserMetadata
}

// GetUserMetadataOk returns a tuple with the UserMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArticleGenericExtended) GetUserMetadataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.UserMetadata) {
		return nil, false
	}
	return &o.UserMetadata, true
}

// HasUserMetadata returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasUserMetadata() bool {
	if o != nil && !IsNil(o.UserMetadata) {
		return true
	}

	return false
}

// SetUserMetadata gets a reference to the given interface{} and assigns it to the UserMetadata field.
func (o *ArticleGenericExtended) SetUserMetadata(v interface{}) {
	o.UserMetadata = v
}

// GetArticleMetadata returns the ArticleMetadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArticleGenericExtended) GetArticleMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ArticleMetadata
}

// GetArticleMetadataOk returns a tuple with the ArticleMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArticleGenericExtended) GetArticleMetadataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ArticleMetadata) {
		return nil, false
	}
	return &o.ArticleMetadata, true
}

// HasArticleMetadata returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasArticleMetadata() bool {
	if o != nil && !IsNil(o.ArticleMetadata) {
		return true
	}

	return false
}

// SetArticleMetadata gets a reference to the given interface{} and assigns it to the ArticleMetadata field.
func (o *ArticleGenericExtended) SetArticleMetadata(v interface{}) {
	o.ArticleMetadata = v
}

// GetCssClasses returns the CssClasses field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetCssClasses() string {
	if o == nil || IsNil(o.CssClasses) {
		var ret string
		return ret
	}
	return *o.CssClasses
}

// GetCssClassesOk returns a tuple with the CssClasses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetCssClassesOk() (*string, bool) {
	if o == nil || IsNil(o.CssClasses) {
		return nil, false
	}
	return o.CssClasses, true
}

// HasCssClasses returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasCssClasses() bool {
	if o != nil && !IsNil(o.CssClasses) {
		return true
	}

	return false
}

// SetCssClasses gets a reference to the given string and assigns it to the CssClasses field.
func (o *ArticleGenericExtended) SetCssClasses(v string) {
	o.CssClasses = &v
}

// GetDisplayCss returns the DisplayCss field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetDisplayCss() string {
	if o == nil || IsNil(o.DisplayCss) {
		var ret string
		return ret
	}
	return *o.DisplayCss
}

// GetDisplayCssOk returns a tuple with the DisplayCss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetDisplayCssOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayCss) {
		return nil, false
	}
	return o.DisplayCss, true
}

// HasDisplayCss returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasDisplayCss() bool {
	if o != nil && !IsNil(o.DisplayCss) {
		return true
	}

	return false
}

// SetDisplayCss gets a reference to the given string and assigns it to the DisplayCss field.
func (o *ArticleGenericExtended) SetDisplayCss(v string) {
	o.DisplayCss = &v
}

// GetTemplateType returns the TemplateType field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetTemplateType() string {
	if o == nil || IsNil(o.TemplateType) {
		var ret string
		return ret
	}
	return *o.TemplateType
}

// GetTemplateTypeOk returns a tuple with the TemplateType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetTemplateTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateType) {
		return nil, false
	}
	return o.TemplateType, true
}

// HasTemplateType returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasTemplateType() bool {
	if o != nil && !IsNil(o.TemplateType) {
		return true
	}

	return false
}

// SetTemplateType gets a reference to the given string and assigns it to the TemplateType field.
func (o *ArticleGenericExtended) SetTemplateType(v string) {
	o.TemplateType = &v
}

// GetCustomArticleTemplate returns the CustomArticleTemplate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArticleGenericExtended) GetCustomArticleTemplate() string {
	if o == nil || IsNil(o.CustomArticleTemplate.Get()) {
		var ret string
		return ret
	}
	return *o.CustomArticleTemplate.Get()
}

// GetCustomArticleTemplateOk returns a tuple with the CustomArticleTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArticleGenericExtended) GetCustomArticleTemplateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomArticleTemplate.Get(), o.CustomArticleTemplate.IsSet()
}

// HasCustomArticleTemplate returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasCustomArticleTemplate() bool {
	if o != nil && o.CustomArticleTemplate.IsSet() {
		return true
	}

	return false
}

// SetCustomArticleTemplate gets a reference to the given NullableString and assigns it to the CustomArticleTemplate field.
func (o *ArticleGenericExtended) SetCustomArticleTemplate(v string) {
	o.CustomArticleTemplate.Set(&v)
}
// SetCustomArticleTemplateNil sets the value for CustomArticleTemplate to be an explicit nil
func (o *ArticleGenericExtended) SetCustomArticleTemplateNil() {
	o.CustomArticleTemplate.Set(nil)
}

// UnsetCustomArticleTemplate ensures that no value is present for CustomArticleTemplate, not even an explicit nil
func (o *ArticleGenericExtended) UnsetCustomArticleTemplate() {
	o.CustomArticleTemplate.Unset()
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *ArticleGenericExtended) SetContent(v string) {
	o.Content = &v
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetAuthor() Object {
	if o == nil || IsNil(o.Author) {
		var ret Object
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetAuthorOk() (*Object, bool) {
	if o == nil || IsNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasAuthor() bool {
	if o != nil && !IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given Object and assigns it to the Author field.
func (o *ArticleGenericExtended) SetAuthor(v Object) {
	o.Author = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetCategory() ArticleGenericGR1Category {
	if o == nil || IsNil(o.Category) {
		var ret ArticleGenericGR1Category
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetCategoryOk() (*ArticleGenericGR1Category, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given ArticleGenericGR1Category and assigns it to the Category field.
func (o *ArticleGenericExtended) SetCategory(v ArticleGenericGR1Category) {
	o.Category = &v
}

// GetWorld returns the World field value if set, zero value otherwise.
func (o *ArticleGenericExtended) GetWorld() Object {
	if o == nil || IsNil(o.World) {
		var ret Object
		return ret
	}
	return *o.World
}

// GetWorldOk returns a tuple with the World field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericExtended) GetWorldOk() (*Object, bool) {
	if o == nil || IsNil(o.World) {
		return nil, false
	}
	return o.World, true
}

// HasWorld returns a boolean if a field has been set.
func (o *ArticleGenericExtended) HasWorld() bool {
	if o != nil && !IsNil(o.World) {
		return true
	}

	return false
}

// SetWorld gets a reference to the given Object and assigns it to the World field.
func (o *ArticleGenericExtended) SetWorld(v Object) {
	o.World = &v
}

func (o ArticleGenericExtended) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArticleGenericExtended) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.IsWip) {
		toSerialize["isWip"] = o.IsWip
	}
	if !IsNil(o.IsDraft) {
		toSerialize["isDraft"] = o.IsDraft
	}
	if !IsNil(o.EntityClass) {
		toSerialize["entityClass"] = o.EntityClass
	}
	if o.Icon.IsSet() {
		toSerialize["icon"] = o.Icon.Get()
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.FolderId) {
		toSerialize["folderId"] = o.FolderId
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.UpdateDate) {
		toSerialize["updateDate"] = o.UpdateDate
	}
	if !IsNil(o.Subscribergroups) {
		toSerialize["subscribergroups"] = o.Subscribergroups
	}
	if !IsNil(o.IsEditable) {
		toSerialize["isEditable"] = o.IsEditable
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	if !IsNil(o.Excerpt) {
		toSerialize["excerpt"] = o.Excerpt
	}
	if !IsNil(o.Wordcount) {
		toSerialize["wordcount"] = o.Wordcount
	}
	if !IsNil(o.CreationDate) {
		toSerialize["creationDate"] = o.CreationDate
	}
	if !IsNil(o.PublicationDate) {
		toSerialize["publicationDate"] = o.PublicationDate
	}
	if !IsNil(o.NotificationDate) {
		toSerialize["notificationDate"] = o.NotificationDate
	}
	if !IsNil(o.Likes) {
		toSerialize["likes"] = o.Likes
	}
	if !IsNil(o.Views) {
		toSerialize["views"] = o.Views
	}
	if o.UserMetadata != nil {
		toSerialize["userMetadata"] = o.UserMetadata
	}
	if o.ArticleMetadata != nil {
		toSerialize["articleMetadata"] = o.ArticleMetadata
	}
	if !IsNil(o.CssClasses) {
		toSerialize["cssClasses"] = o.CssClasses
	}
	if !IsNil(o.DisplayCss) {
		toSerialize["displayCss"] = o.DisplayCss
	}
	if !IsNil(o.TemplateType) {
		toSerialize["templateType"] = o.TemplateType
	}
	if o.CustomArticleTemplate.IsSet() {
		toSerialize["customArticleTemplate"] = o.CustomArticleTemplate.Get()
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.World) {
		toSerialize["world"] = o.World
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ArticleGenericExtended) UnmarshalJSON(data []byte) (err error) {
	varArticleGenericExtended := _ArticleGenericExtended{}

	err = json.Unmarshal(data, &varArticleGenericExtended)

	if err != nil {
		return err
	}

	*o = ArticleGenericExtended(varArticleGenericExtended)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "title")
		delete(additionalProperties, "slug")
		delete(additionalProperties, "state")
		delete(additionalProperties, "isWip")
		delete(additionalProperties, "isDraft")
		delete(additionalProperties, "entityClass")
		delete(additionalProperties, "icon")
		delete(additionalProperties, "url")
		delete(additionalProperties, "folderId")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "updateDate")
		delete(additionalProperties, "subscribergroups")
		delete(additionalProperties, "isEditable")
		delete(additionalProperties, "success")
		delete(additionalProperties, "position")
		delete(additionalProperties, "excerpt")
		delete(additionalProperties, "wordcount")
		delete(additionalProperties, "creationDate")
		delete(additionalProperties, "publicationDate")
		delete(additionalProperties, "notificationDate")
		delete(additionalProperties, "likes")
		delete(additionalProperties, "views")
		delete(additionalProperties, "userMetadata")
		delete(additionalProperties, "articleMetadata")
		delete(additionalProperties, "cssClasses")
		delete(additionalProperties, "displayCss")
		delete(additionalProperties, "templateType")
		delete(additionalProperties, "customArticleTemplate")
		delete(additionalProperties, "content")
		delete(additionalProperties, "author")
		delete(additionalProperties, "category")
		delete(additionalProperties, "world")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableArticleGenericExtended struct {
	value *ArticleGenericExtended
	isSet bool
}

func (v NullableArticleGenericExtended) Get() *ArticleGenericExtended {
	return v.value
}

func (v *NullableArticleGenericExtended) Set(val *ArticleGenericExtended) {
	v.value = val
	v.isSet = true
}

func (v NullableArticleGenericExtended) IsSet() bool {
	return v.isSet
}

func (v *NullableArticleGenericExtended) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArticleGenericExtended(val *ArticleGenericExtended) *NullableArticleGenericExtended {
	return &NullableArticleGenericExtended{value: val, isSet: true}
}

func (v NullableArticleGenericExtended) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArticleGenericExtended) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


