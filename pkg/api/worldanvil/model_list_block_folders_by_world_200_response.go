/*
World Anvil Public API Documentation

Welcome to the World Anvil Public API Documentation. This API provides developers and World Anvil users with programmatic access to the extensive features of the World Anvil worldbuilding platform. Whether you're building integrations, automating tasks, or creating custom experiences, this API empowers you to interact with your worldbuilding data seamlessly.

API version: 2.0.0 - Boromir
Contact: contact@worldanvil.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package worldanvil

import (
	"encoding/json"
)

// checks if the ListBlockFoldersByWorld200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListBlockFoldersByWorld200Response{}

// ListBlockFoldersByWorld200Response struct for ListBlockFoldersByWorld200Response
type ListBlockFoldersByWorld200Response struct {
	Success *bool `json:"success,omitempty"`
	Entities []BlockFolderRef `json:"entities,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListBlockFoldersByWorld200Response ListBlockFoldersByWorld200Response

// NewListBlockFoldersByWorld200Response instantiates a new ListBlockFoldersByWorld200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListBlockFoldersByWorld200Response() *ListBlockFoldersByWorld200Response {
	this := ListBlockFoldersByWorld200Response{}
	return &this
}

// NewListBlockFoldersByWorld200ResponseWithDefaults instantiates a new ListBlockFoldersByWorld200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListBlockFoldersByWorld200ResponseWithDefaults() *ListBlockFoldersByWorld200Response {
	this := ListBlockFoldersByWorld200Response{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *ListBlockFoldersByWorld200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBlockFoldersByWorld200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *ListBlockFoldersByWorld200Response) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *ListBlockFoldersByWorld200Response) SetSuccess(v bool) {
	o.Success = &v
}

// GetEntities returns the Entities field value if set, zero value otherwise.
func (o *ListBlockFoldersByWorld200Response) GetEntities() []BlockFolderRef {
	if o == nil || IsNil(o.Entities) {
		var ret []BlockFolderRef
		return ret
	}
	return o.Entities
}

// GetEntitiesOk returns a tuple with the Entities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListBlockFoldersByWorld200Response) GetEntitiesOk() ([]BlockFolderRef, bool) {
	if o == nil || IsNil(o.Entities) {
		return nil, false
	}
	return o.Entities, true
}

// HasEntities returns a boolean if a field has been set.
func (o *ListBlockFoldersByWorld200Response) HasEntities() bool {
	if o != nil && !IsNil(o.Entities) {
		return true
	}

	return false
}

// SetEntities gets a reference to the given []BlockFolderRef and assigns it to the Entities field.
func (o *ListBlockFoldersByWorld200Response) SetEntities(v []BlockFolderRef) {
	o.Entities = v
}

func (o ListBlockFoldersByWorld200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListBlockFoldersByWorld200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Entities) {
		toSerialize["entities"] = o.Entities
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListBlockFoldersByWorld200Response) UnmarshalJSON(data []byte) (err error) {
	varListBlockFoldersByWorld200Response := _ListBlockFoldersByWorld200Response{}

	err = json.Unmarshal(data, &varListBlockFoldersByWorld200Response)

	if err != nil {
		return err
	}

	*o = ListBlockFoldersByWorld200Response(varListBlockFoldersByWorld200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "success")
		delete(additionalProperties, "entities")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListBlockFoldersByWorld200Response struct {
	value *ListBlockFoldersByWorld200Response
	isSet bool
}

func (v NullableListBlockFoldersByWorld200Response) Get() *ListBlockFoldersByWorld200Response {
	return v.value
}

func (v *NullableListBlockFoldersByWorld200Response) Set(val *ListBlockFoldersByWorld200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListBlockFoldersByWorld200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListBlockFoldersByWorld200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListBlockFoldersByWorld200Response(val *ListBlockFoldersByWorld200Response) *NullableListBlockFoldersByWorld200Response {
	return &NullableListBlockFoldersByWorld200Response{value: val, isSet: true}
}

func (v NullableListBlockFoldersByWorld200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListBlockFoldersByWorld200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


