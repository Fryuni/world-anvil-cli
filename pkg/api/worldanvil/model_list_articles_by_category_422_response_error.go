/*
World Anvil Public API Documentation

Welcome to the World Anvil Public API Documentation. This API provides developers and World Anvil users with programmatic access to the extensive features of the World Anvil worldbuilding platform. Whether you're building integrations, automating tasks, or creating custom experiences, this API empowers you to interact with your worldbuilding data seamlessly.

API version: 2.0.0 - Boromir
Contact: contact@worldanvil.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package worldanvil

import (
	"encoding/json"
)

// checks if the ListArticlesByCategory422ResponseError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListArticlesByCategory422ResponseError{}

// ListArticlesByCategory422ResponseError struct for ListArticlesByCategory422ResponseError
type ListArticlesByCategory422ResponseError struct {
	Summary *string `json:"summary,omitempty"`
	TraceStack *string `json:"traceStack,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListArticlesByCategory422ResponseError ListArticlesByCategory422ResponseError

// NewListArticlesByCategory422ResponseError instantiates a new ListArticlesByCategory422ResponseError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListArticlesByCategory422ResponseError() *ListArticlesByCategory422ResponseError {
	this := ListArticlesByCategory422ResponseError{}
	return &this
}

// NewListArticlesByCategory422ResponseErrorWithDefaults instantiates a new ListArticlesByCategory422ResponseError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListArticlesByCategory422ResponseErrorWithDefaults() *ListArticlesByCategory422ResponseError {
	this := ListArticlesByCategory422ResponseError{}
	return &this
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *ListArticlesByCategory422ResponseError) GetSummary() string {
	if o == nil || IsNil(o.Summary) {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListArticlesByCategory422ResponseError) GetSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *ListArticlesByCategory422ResponseError) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *ListArticlesByCategory422ResponseError) SetSummary(v string) {
	o.Summary = &v
}

// GetTraceStack returns the TraceStack field value if set, zero value otherwise.
func (o *ListArticlesByCategory422ResponseError) GetTraceStack() string {
	if o == nil || IsNil(o.TraceStack) {
		var ret string
		return ret
	}
	return *o.TraceStack
}

// GetTraceStackOk returns a tuple with the TraceStack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListArticlesByCategory422ResponseError) GetTraceStackOk() (*string, bool) {
	if o == nil || IsNil(o.TraceStack) {
		return nil, false
	}
	return o.TraceStack, true
}

// HasTraceStack returns a boolean if a field has been set.
func (o *ListArticlesByCategory422ResponseError) HasTraceStack() bool {
	if o != nil && !IsNil(o.TraceStack) {
		return true
	}

	return false
}

// SetTraceStack gets a reference to the given string and assigns it to the TraceStack field.
func (o *ListArticlesByCategory422ResponseError) SetTraceStack(v string) {
	o.TraceStack = &v
}

func (o ListArticlesByCategory422ResponseError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListArticlesByCategory422ResponseError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	if !IsNil(o.TraceStack) {
		toSerialize["traceStack"] = o.TraceStack
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListArticlesByCategory422ResponseError) UnmarshalJSON(data []byte) (err error) {
	varListArticlesByCategory422ResponseError := _ListArticlesByCategory422ResponseError{}

	err = json.Unmarshal(data, &varListArticlesByCategory422ResponseError)

	if err != nil {
		return err
	}

	*o = ListArticlesByCategory422ResponseError(varListArticlesByCategory422ResponseError)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "summary")
		delete(additionalProperties, "traceStack")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListArticlesByCategory422ResponseError struct {
	value *ListArticlesByCategory422ResponseError
	isSet bool
}

func (v NullableListArticlesByCategory422ResponseError) Get() *ListArticlesByCategory422ResponseError {
	return v.value
}

func (v *NullableListArticlesByCategory422ResponseError) Set(val *ListArticlesByCategory422ResponseError) {
	v.value = val
	v.isSet = true
}

func (v NullableListArticlesByCategory422ResponseError) IsSet() bool {
	return v.isSet
}

func (v *NullableListArticlesByCategory422ResponseError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListArticlesByCategory422ResponseError(val *ListArticlesByCategory422ResponseError) *NullableListArticlesByCategory422ResponseError {
	return &NullableListArticlesByCategory422ResponseError{value: val, isSet: true}
}

func (v NullableListArticlesByCategory422ResponseError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListArticlesByCategory422ResponseError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


