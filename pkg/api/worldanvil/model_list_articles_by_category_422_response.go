/*
World Anvil Public API Documentation

Welcome to the World Anvil Public API Documentation. This API provides developers and World Anvil users with programmatic access to the extensive features of the World Anvil worldbuilding platform. Whether you're building integrations, automating tasks, or creating custom experiences, this API empowers you to interact with your worldbuilding data seamlessly.

API version: 2.0.0 - Boromir
Contact: contact@worldanvil.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package worldanvil

import (
	"encoding/json"
)

// checks if the ListArticlesByCategory422Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListArticlesByCategory422Response{}

// ListArticlesByCategory422Response struct for ListArticlesByCategory422Response
type ListArticlesByCategory422Response struct {
	Success *bool `json:"success,omitempty"`
	Status *string `json:"status,omitempty"`
	Error *ListArticlesByCategory422ResponseError `json:"error,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListArticlesByCategory422Response ListArticlesByCategory422Response

// NewListArticlesByCategory422Response instantiates a new ListArticlesByCategory422Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListArticlesByCategory422Response() *ListArticlesByCategory422Response {
	this := ListArticlesByCategory422Response{}
	var success bool = false
	this.Success = &success
	var status string = "Unprocessable Data provided"
	this.Status = &status
	return &this
}

// NewListArticlesByCategory422ResponseWithDefaults instantiates a new ListArticlesByCategory422Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListArticlesByCategory422ResponseWithDefaults() *ListArticlesByCategory422Response {
	this := ListArticlesByCategory422Response{}
	var success bool = false
	this.Success = &success
	var status string = "Unprocessable Data provided"
	this.Status = &status
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *ListArticlesByCategory422Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListArticlesByCategory422Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *ListArticlesByCategory422Response) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *ListArticlesByCategory422Response) SetSuccess(v bool) {
	o.Success = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ListArticlesByCategory422Response) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListArticlesByCategory422Response) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ListArticlesByCategory422Response) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ListArticlesByCategory422Response) SetStatus(v string) {
	o.Status = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ListArticlesByCategory422Response) GetError() ListArticlesByCategory422ResponseError {
	if o == nil || IsNil(o.Error) {
		var ret ListArticlesByCategory422ResponseError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListArticlesByCategory422Response) GetErrorOk() (*ListArticlesByCategory422ResponseError, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *ListArticlesByCategory422Response) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given ListArticlesByCategory422ResponseError and assigns it to the Error field.
func (o *ListArticlesByCategory422Response) SetError(v ListArticlesByCategory422ResponseError) {
	o.Error = &v
}

func (o ListArticlesByCategory422Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListArticlesByCategory422Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListArticlesByCategory422Response) UnmarshalJSON(data []byte) (err error) {
	varListArticlesByCategory422Response := _ListArticlesByCategory422Response{}

	err = json.Unmarshal(data, &varListArticlesByCategory422Response)

	if err != nil {
		return err
	}

	*o = ListArticlesByCategory422Response(varListArticlesByCategory422Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "success")
		delete(additionalProperties, "status")
		delete(additionalProperties, "error")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListArticlesByCategory422Response struct {
	value *ListArticlesByCategory422Response
	isSet bool
}

func (v NullableListArticlesByCategory422Response) Get() *ListArticlesByCategory422Response {
	return v.value
}

func (v *NullableListArticlesByCategory422Response) Set(val *ListArticlesByCategory422Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListArticlesByCategory422Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListArticlesByCategory422Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListArticlesByCategory422Response(val *ListArticlesByCategory422Response) *NullableListArticlesByCategory422Response {
	return &NullableListArticlesByCategory422Response{value: val, isSet: true}
}

func (v NullableListArticlesByCategory422Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListArticlesByCategory422Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


