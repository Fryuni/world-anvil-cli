/*
World Anvil Public API Documentation

Welcome to the World Anvil Public API Documentation. This API provides developers and World Anvil users with programmatic access to the extensive features of the World Anvil worldbuilding platform. Whether you're building integrations, automating tasks, or creating custom experiences, this API empowers you to interact with your worldbuilding data seamlessly.

API version: 2.0.0 - Boromir
Contact: contact@worldanvil.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package worldanvil

import (
	"encoding/json"
)

// checks if the ArticleGenericGR3Ancestry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArticleGenericGR3Ancestry{}

// ArticleGenericGR3Ancestry The ancestry of the article. The firstUp, secondUp, and thirdUp fields are the first, second, and third  parent article category or world of the article. Note that secondUp and thirdUp are nullable. 
type ArticleGenericGR3Ancestry struct {
	FirstUp *ArticleGenericGR3AncestryFirstUp `json:"firstUp,omitempty"`
	SecondUp NullableArticleGenericGR3AncestrySecondUp `json:"secondUp,omitempty"`
	ThirdUp NullableArticleGenericGR3AncestryThirdUp `json:"thirdUp,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ArticleGenericGR3Ancestry ArticleGenericGR3Ancestry

// NewArticleGenericGR3Ancestry instantiates a new ArticleGenericGR3Ancestry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArticleGenericGR3Ancestry() *ArticleGenericGR3Ancestry {
	this := ArticleGenericGR3Ancestry{}
	return &this
}

// NewArticleGenericGR3AncestryWithDefaults instantiates a new ArticleGenericGR3Ancestry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArticleGenericGR3AncestryWithDefaults() *ArticleGenericGR3Ancestry {
	this := ArticleGenericGR3Ancestry{}
	return &this
}

// GetFirstUp returns the FirstUp field value if set, zero value otherwise.
func (o *ArticleGenericGR3Ancestry) GetFirstUp() ArticleGenericGR3AncestryFirstUp {
	if o == nil || IsNil(o.FirstUp) {
		var ret ArticleGenericGR3AncestryFirstUp
		return ret
	}
	return *o.FirstUp
}

// GetFirstUpOk returns a tuple with the FirstUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericGR3Ancestry) GetFirstUpOk() (*ArticleGenericGR3AncestryFirstUp, bool) {
	if o == nil || IsNil(o.FirstUp) {
		return nil, false
	}
	return o.FirstUp, true
}

// HasFirstUp returns a boolean if a field has been set.
func (o *ArticleGenericGR3Ancestry) HasFirstUp() bool {
	if o != nil && !IsNil(o.FirstUp) {
		return true
	}

	return false
}

// SetFirstUp gets a reference to the given ArticleGenericGR3AncestryFirstUp and assigns it to the FirstUp field.
func (o *ArticleGenericGR3Ancestry) SetFirstUp(v ArticleGenericGR3AncestryFirstUp) {
	o.FirstUp = &v
}

// GetSecondUp returns the SecondUp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArticleGenericGR3Ancestry) GetSecondUp() ArticleGenericGR3AncestrySecondUp {
	if o == nil || IsNil(o.SecondUp.Get()) {
		var ret ArticleGenericGR3AncestrySecondUp
		return ret
	}
	return *o.SecondUp.Get()
}

// GetSecondUpOk returns a tuple with the SecondUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArticleGenericGR3Ancestry) GetSecondUpOk() (*ArticleGenericGR3AncestrySecondUp, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecondUp.Get(), o.SecondUp.IsSet()
}

// HasSecondUp returns a boolean if a field has been set.
func (o *ArticleGenericGR3Ancestry) HasSecondUp() bool {
	if o != nil && o.SecondUp.IsSet() {
		return true
	}

	return false
}

// SetSecondUp gets a reference to the given NullableArticleGenericGR3AncestrySecondUp and assigns it to the SecondUp field.
func (o *ArticleGenericGR3Ancestry) SetSecondUp(v ArticleGenericGR3AncestrySecondUp) {
	o.SecondUp.Set(&v)
}
// SetSecondUpNil sets the value for SecondUp to be an explicit nil
func (o *ArticleGenericGR3Ancestry) SetSecondUpNil() {
	o.SecondUp.Set(nil)
}

// UnsetSecondUp ensures that no value is present for SecondUp, not even an explicit nil
func (o *ArticleGenericGR3Ancestry) UnsetSecondUp() {
	o.SecondUp.Unset()
}

// GetThirdUp returns the ThirdUp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArticleGenericGR3Ancestry) GetThirdUp() ArticleGenericGR3AncestryThirdUp {
	if o == nil || IsNil(o.ThirdUp.Get()) {
		var ret ArticleGenericGR3AncestryThirdUp
		return ret
	}
	return *o.ThirdUp.Get()
}

// GetThirdUpOk returns a tuple with the ThirdUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArticleGenericGR3Ancestry) GetThirdUpOk() (*ArticleGenericGR3AncestryThirdUp, bool) {
	if o == nil {
		return nil, false
	}
	return o.ThirdUp.Get(), o.ThirdUp.IsSet()
}

// HasThirdUp returns a boolean if a field has been set.
func (o *ArticleGenericGR3Ancestry) HasThirdUp() bool {
	if o != nil && o.ThirdUp.IsSet() {
		return true
	}

	return false
}

// SetThirdUp gets a reference to the given NullableArticleGenericGR3AncestryThirdUp and assigns it to the ThirdUp field.
func (o *ArticleGenericGR3Ancestry) SetThirdUp(v ArticleGenericGR3AncestryThirdUp) {
	o.ThirdUp.Set(&v)
}
// SetThirdUpNil sets the value for ThirdUp to be an explicit nil
func (o *ArticleGenericGR3Ancestry) SetThirdUpNil() {
	o.ThirdUp.Set(nil)
}

// UnsetThirdUp ensures that no value is present for ThirdUp, not even an explicit nil
func (o *ArticleGenericGR3Ancestry) UnsetThirdUp() {
	o.ThirdUp.Unset()
}

func (o ArticleGenericGR3Ancestry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArticleGenericGR3Ancestry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FirstUp) {
		toSerialize["firstUp"] = o.FirstUp
	}
	if o.SecondUp.IsSet() {
		toSerialize["secondUp"] = o.SecondUp.Get()
	}
	if o.ThirdUp.IsSet() {
		toSerialize["thirdUp"] = o.ThirdUp.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ArticleGenericGR3Ancestry) UnmarshalJSON(data []byte) (err error) {
	varArticleGenericGR3Ancestry := _ArticleGenericGR3Ancestry{}

	err = json.Unmarshal(data, &varArticleGenericGR3Ancestry)

	if err != nil {
		return err
	}

	*o = ArticleGenericGR3Ancestry(varArticleGenericGR3Ancestry)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "firstUp")
		delete(additionalProperties, "secondUp")
		delete(additionalProperties, "thirdUp")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableArticleGenericGR3Ancestry struct {
	value *ArticleGenericGR3Ancestry
	isSet bool
}

func (v NullableArticleGenericGR3Ancestry) Get() *ArticleGenericGR3Ancestry {
	return v.value
}

func (v *NullableArticleGenericGR3Ancestry) Set(val *ArticleGenericGR3Ancestry) {
	v.value = val
	v.isSet = true
}

func (v NullableArticleGenericGR3Ancestry) IsSet() bool {
	return v.isSet
}

func (v *NullableArticleGenericGR3Ancestry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArticleGenericGR3Ancestry(val *ArticleGenericGR3Ancestry) *NullableArticleGenericGR3Ancestry {
	return &NullableArticleGenericGR3Ancestry{value: val, isSet: true}
}

func (v NullableArticleGenericGR3Ancestry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArticleGenericGR3Ancestry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


