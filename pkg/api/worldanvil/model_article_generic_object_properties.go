/*
World Anvil Public API Documentation

Welcome to the World Anvil Public API Documentation. This API provides developers and World Anvil users with programmatic access to the extensive features of the World Anvil worldbuilding platform. Whether you're building integrations, automating tasks, or creating custom experiences, this API empowers you to interact with your worldbuilding data seamlessly.

API version: 2.0.0 - Boromir
Contact: contact@worldanvil.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package worldanvil

import (
	"encoding/json"
)

// checks if the ArticleGenericObjectProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArticleGenericObjectProperties{}

// ArticleGenericObjectProperties These are the object properties of the article which can be updated.
type ArticleGenericObjectProperties struct {
	Cover *Object `json:"cover,omitempty"`
	Gallery *interface{} `json:"gallery,omitempty"`
	ArticleNext *string `json:"articleNext,omitempty"`
	ArticlePrevious *string `json:"articlePrevious,omitempty"`
	Block *interface{} `json:"block,omitempty"`
	Orgchart *interface{} `json:"orgchart,omitempty"`
	Manuscripts []Object `json:"manuscripts,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ArticleGenericObjectProperties ArticleGenericObjectProperties

// NewArticleGenericObjectProperties instantiates a new ArticleGenericObjectProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArticleGenericObjectProperties() *ArticleGenericObjectProperties {
	this := ArticleGenericObjectProperties{}
	return &this
}

// NewArticleGenericObjectPropertiesWithDefaults instantiates a new ArticleGenericObjectProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArticleGenericObjectPropertiesWithDefaults() *ArticleGenericObjectProperties {
	this := ArticleGenericObjectProperties{}
	return &this
}

// GetCover returns the Cover field value if set, zero value otherwise.
func (o *ArticleGenericObjectProperties) GetCover() Object {
	if o == nil || IsNil(o.Cover) {
		var ret Object
		return ret
	}
	return *o.Cover
}

// GetCoverOk returns a tuple with the Cover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericObjectProperties) GetCoverOk() (*Object, bool) {
	if o == nil || IsNil(o.Cover) {
		return nil, false
	}
	return o.Cover, true
}

// HasCover returns a boolean if a field has been set.
func (o *ArticleGenericObjectProperties) HasCover() bool {
	if o != nil && !IsNil(o.Cover) {
		return true
	}

	return false
}

// SetCover gets a reference to the given Object and assigns it to the Cover field.
func (o *ArticleGenericObjectProperties) SetCover(v Object) {
	o.Cover = &v
}

// GetGallery returns the Gallery field value if set, zero value otherwise.
func (o *ArticleGenericObjectProperties) GetGallery() interface{} {
	if o == nil || IsNil(o.Gallery) {
		var ret interface{}
		return ret
	}
	return *o.Gallery
}

// GetGalleryOk returns a tuple with the Gallery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericObjectProperties) GetGalleryOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Gallery) {
		return nil, false
	}
	return o.Gallery, true
}

// HasGallery returns a boolean if a field has been set.
func (o *ArticleGenericObjectProperties) HasGallery() bool {
	if o != nil && !IsNil(o.Gallery) {
		return true
	}

	return false
}

// SetGallery gets a reference to the given interface{} and assigns it to the Gallery field.
func (o *ArticleGenericObjectProperties) SetGallery(v interface{}) {
	o.Gallery = &v
}

// GetArticleNext returns the ArticleNext field value if set, zero value otherwise.
func (o *ArticleGenericObjectProperties) GetArticleNext() string {
	if o == nil || IsNil(o.ArticleNext) {
		var ret string
		return ret
	}
	return *o.ArticleNext
}

// GetArticleNextOk returns a tuple with the ArticleNext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericObjectProperties) GetArticleNextOk() (*string, bool) {
	if o == nil || IsNil(o.ArticleNext) {
		return nil, false
	}
	return o.ArticleNext, true
}

// HasArticleNext returns a boolean if a field has been set.
func (o *ArticleGenericObjectProperties) HasArticleNext() bool {
	if o != nil && !IsNil(o.ArticleNext) {
		return true
	}

	return false
}

// SetArticleNext gets a reference to the given string and assigns it to the ArticleNext field.
func (o *ArticleGenericObjectProperties) SetArticleNext(v string) {
	o.ArticleNext = &v
}

// GetArticlePrevious returns the ArticlePrevious field value if set, zero value otherwise.
func (o *ArticleGenericObjectProperties) GetArticlePrevious() string {
	if o == nil || IsNil(o.ArticlePrevious) {
		var ret string
		return ret
	}
	return *o.ArticlePrevious
}

// GetArticlePreviousOk returns a tuple with the ArticlePrevious field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericObjectProperties) GetArticlePreviousOk() (*string, bool) {
	if o == nil || IsNil(o.ArticlePrevious) {
		return nil, false
	}
	return o.ArticlePrevious, true
}

// HasArticlePrevious returns a boolean if a field has been set.
func (o *ArticleGenericObjectProperties) HasArticlePrevious() bool {
	if o != nil && !IsNil(o.ArticlePrevious) {
		return true
	}

	return false
}

// SetArticlePrevious gets a reference to the given string and assigns it to the ArticlePrevious field.
func (o *ArticleGenericObjectProperties) SetArticlePrevious(v string) {
	o.ArticlePrevious = &v
}

// GetBlock returns the Block field value if set, zero value otherwise.
func (o *ArticleGenericObjectProperties) GetBlock() interface{} {
	if o == nil || IsNil(o.Block) {
		var ret interface{}
		return ret
	}
	return *o.Block
}

// GetBlockOk returns a tuple with the Block field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericObjectProperties) GetBlockOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Block) {
		return nil, false
	}
	return o.Block, true
}

// HasBlock returns a boolean if a field has been set.
func (o *ArticleGenericObjectProperties) HasBlock() bool {
	if o != nil && !IsNil(o.Block) {
		return true
	}

	return false
}

// SetBlock gets a reference to the given interface{} and assigns it to the Block field.
func (o *ArticleGenericObjectProperties) SetBlock(v interface{}) {
	o.Block = &v
}

// GetOrgchart returns the Orgchart field value if set, zero value otherwise.
func (o *ArticleGenericObjectProperties) GetOrgchart() interface{} {
	if o == nil || IsNil(o.Orgchart) {
		var ret interface{}
		return ret
	}
	return *o.Orgchart
}

// GetOrgchartOk returns a tuple with the Orgchart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericObjectProperties) GetOrgchartOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Orgchart) {
		return nil, false
	}
	return o.Orgchart, true
}

// HasOrgchart returns a boolean if a field has been set.
func (o *ArticleGenericObjectProperties) HasOrgchart() bool {
	if o != nil && !IsNil(o.Orgchart) {
		return true
	}

	return false
}

// SetOrgchart gets a reference to the given interface{} and assigns it to the Orgchart field.
func (o *ArticleGenericObjectProperties) SetOrgchart(v interface{}) {
	o.Orgchart = &v
}

// GetManuscripts returns the Manuscripts field value if set, zero value otherwise.
func (o *ArticleGenericObjectProperties) GetManuscripts() []Object {
	if o == nil || IsNil(o.Manuscripts) {
		var ret []Object
		return ret
	}
	return o.Manuscripts
}

// GetManuscriptsOk returns a tuple with the Manuscripts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericObjectProperties) GetManuscriptsOk() ([]Object, bool) {
	if o == nil || IsNil(o.Manuscripts) {
		return nil, false
	}
	return o.Manuscripts, true
}

// HasManuscripts returns a boolean if a field has been set.
func (o *ArticleGenericObjectProperties) HasManuscripts() bool {
	if o != nil && !IsNil(o.Manuscripts) {
		return true
	}

	return false
}

// SetManuscripts gets a reference to the given []Object and assigns it to the Manuscripts field.
func (o *ArticleGenericObjectProperties) SetManuscripts(v []Object) {
	o.Manuscripts = v
}

func (o ArticleGenericObjectProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArticleGenericObjectProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cover) {
		toSerialize["cover"] = o.Cover
	}
	if !IsNil(o.Gallery) {
		toSerialize["gallery"] = o.Gallery
	}
	if !IsNil(o.ArticleNext) {
		toSerialize["articleNext"] = o.ArticleNext
	}
	if !IsNil(o.ArticlePrevious) {
		toSerialize["articlePrevious"] = o.ArticlePrevious
	}
	if !IsNil(o.Block) {
		toSerialize["block"] = o.Block
	}
	if !IsNil(o.Orgchart) {
		toSerialize["orgchart"] = o.Orgchart
	}
	if !IsNil(o.Manuscripts) {
		toSerialize["manuscripts"] = o.Manuscripts
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ArticleGenericObjectProperties) UnmarshalJSON(data []byte) (err error) {
	varArticleGenericObjectProperties := _ArticleGenericObjectProperties{}

	err = json.Unmarshal(data, &varArticleGenericObjectProperties)

	if err != nil {
		return err
	}

	*o = ArticleGenericObjectProperties(varArticleGenericObjectProperties)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cover")
		delete(additionalProperties, "gallery")
		delete(additionalProperties, "articleNext")
		delete(additionalProperties, "articlePrevious")
		delete(additionalProperties, "block")
		delete(additionalProperties, "orgchart")
		delete(additionalProperties, "manuscripts")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableArticleGenericObjectProperties struct {
	value *ArticleGenericObjectProperties
	isSet bool
}

func (v NullableArticleGenericObjectProperties) Get() *ArticleGenericObjectProperties {
	return v.value
}

func (v *NullableArticleGenericObjectProperties) Set(val *ArticleGenericObjectProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableArticleGenericObjectProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableArticleGenericObjectProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArticleGenericObjectProperties(val *ArticleGenericObjectProperties) *NullableArticleGenericObjectProperties {
	return &NullableArticleGenericObjectProperties{value: val, isSet: true}
}

func (v NullableArticleGenericObjectProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArticleGenericObjectProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


