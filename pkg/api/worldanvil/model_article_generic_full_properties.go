/*
World Anvil Public API Documentation

Welcome to the World Anvil Public API Documentation. This API provides developers and World Anvil users with programmatic access to the extensive features of the World Anvil worldbuilding platform. Whether you're building integrations, automating tasks, or creating custom experiences, this API empowers you to interact with your worldbuilding data seamlessly.

API version: 2.0.0 - Boromir
Contact: contact@worldanvil.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package worldanvil

import (
	"encoding/json"
)

// checks if the ArticleGenericFullProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArticleGenericFullProperties{}

// ArticleGenericFullProperties struct for ArticleGenericFullProperties
type ArticleGenericFullProperties struct {
	Pronunciation *string `json:"pronunciation,omitempty"`
	Snippet *string `json:"snippet,omitempty"`
	Seeded *string `json:"seeded,omitempty"`
	Sidebarcontent *string `json:"sidebarcontent,omitempty"`
	Sidepanelcontenttop *string `json:"sidepanelcontenttop,omitempty"`
	Sidepanelcontent *string `json:"sidepanelcontent,omitempty"`
	Sidebarcontentbottom *string `json:"sidebarcontentbottom,omitempty"`
	Footnotes *string `json:"footnotes,omitempty"`
	Fullfooter *string `json:"fullfooter,omitempty"`
	Authornotes *string `json:"authornotes,omitempty"`
	Scrapbook *string `json:"scrapbook,omitempty"`
	Credits *string `json:"credits,omitempty"`
	DisplaySidebar *bool `json:"displaySidebar,omitempty"`
	Timeline *Object `json:"timeline,omitempty"`
	Prompt *Object `json:"prompt,omitempty"`
	ShowSeeded *bool `json:"showSeeded,omitempty"`
	WebhookUpdate *bool `json:"webhookUpdate,omitempty"`
	CommunityUpdate *bool `json:"communityUpdate,omitempty"`
	CommentPlaceholder NullableString `json:"commentPlaceholder,omitempty"`
	MetaTitle NullableString `json:"metaTitle,omitempty"`
	MetadDescription NullableString `json:"metadDescription,omitempty"`
	Subheading NullableString `json:"subheading,omitempty"`
	CoverIsMap *bool `json:"coverIsMap,omitempty"`
	IsFeaturedArticle *bool `json:"isFeaturedArticle,omitempty"`
	IsAdultContent *bool `json:"isAdultContent,omitempty"`
	IsLocked *bool `json:"isLocked,omitempty"`
	AllowComments *bool `json:"allowComments,omitempty"`
	ShowInToc *bool `json:"showInToc,omitempty"`
	IsEmphasized *bool `json:"isEmphasized,omitempty"`
	DisplayAuthor *bool `json:"displayAuthor,omitempty"`
	DisplayChildrenUnder *bool `json:"displayChildrenUnder,omitempty"`
	DisplayTitle *bool `json:"displayTitle,omitempty"`
	DisplaySheet *bool `json:"displaySheet,omitempty"`
	Badge NullableString `json:"badge,omitempty"`
	Secrets []Object `json:"secrets,omitempty"`
	Histories []Object `json:"histories,omitempty"`
	EditURL *string `json:"editURL,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ArticleGenericFullProperties ArticleGenericFullProperties

// NewArticleGenericFullProperties instantiates a new ArticleGenericFullProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArticleGenericFullProperties() *ArticleGenericFullProperties {
	this := ArticleGenericFullProperties{}
	return &this
}

// NewArticleGenericFullPropertiesWithDefaults instantiates a new ArticleGenericFullProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArticleGenericFullPropertiesWithDefaults() *ArticleGenericFullProperties {
	this := ArticleGenericFullProperties{}
	return &this
}

// GetPronunciation returns the Pronunciation field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetPronunciation() string {
	if o == nil || IsNil(o.Pronunciation) {
		var ret string
		return ret
	}
	return *o.Pronunciation
}

// GetPronunciationOk returns a tuple with the Pronunciation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetPronunciationOk() (*string, bool) {
	if o == nil || IsNil(o.Pronunciation) {
		return nil, false
	}
	return o.Pronunciation, true
}

// HasPronunciation returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasPronunciation() bool {
	if o != nil && !IsNil(o.Pronunciation) {
		return true
	}

	return false
}

// SetPronunciation gets a reference to the given string and assigns it to the Pronunciation field.
func (o *ArticleGenericFullProperties) SetPronunciation(v string) {
	o.Pronunciation = &v
}

// GetSnippet returns the Snippet field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetSnippet() string {
	if o == nil || IsNil(o.Snippet) {
		var ret string
		return ret
	}
	return *o.Snippet
}

// GetSnippetOk returns a tuple with the Snippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetSnippetOk() (*string, bool) {
	if o == nil || IsNil(o.Snippet) {
		return nil, false
	}
	return o.Snippet, true
}

// HasSnippet returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasSnippet() bool {
	if o != nil && !IsNil(o.Snippet) {
		return true
	}

	return false
}

// SetSnippet gets a reference to the given string and assigns it to the Snippet field.
func (o *ArticleGenericFullProperties) SetSnippet(v string) {
	o.Snippet = &v
}

// GetSeeded returns the Seeded field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetSeeded() string {
	if o == nil || IsNil(o.Seeded) {
		var ret string
		return ret
	}
	return *o.Seeded
}

// GetSeededOk returns a tuple with the Seeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetSeededOk() (*string, bool) {
	if o == nil || IsNil(o.Seeded) {
		return nil, false
	}
	return o.Seeded, true
}

// HasSeeded returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasSeeded() bool {
	if o != nil && !IsNil(o.Seeded) {
		return true
	}

	return false
}

// SetSeeded gets a reference to the given string and assigns it to the Seeded field.
func (o *ArticleGenericFullProperties) SetSeeded(v string) {
	o.Seeded = &v
}

// GetSidebarcontent returns the Sidebarcontent field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetSidebarcontent() string {
	if o == nil || IsNil(o.Sidebarcontent) {
		var ret string
		return ret
	}
	return *o.Sidebarcontent
}

// GetSidebarcontentOk returns a tuple with the Sidebarcontent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetSidebarcontentOk() (*string, bool) {
	if o == nil || IsNil(o.Sidebarcontent) {
		return nil, false
	}
	return o.Sidebarcontent, true
}

// HasSidebarcontent returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasSidebarcontent() bool {
	if o != nil && !IsNil(o.Sidebarcontent) {
		return true
	}

	return false
}

// SetSidebarcontent gets a reference to the given string and assigns it to the Sidebarcontent field.
func (o *ArticleGenericFullProperties) SetSidebarcontent(v string) {
	o.Sidebarcontent = &v
}

// GetSidepanelcontenttop returns the Sidepanelcontenttop field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetSidepanelcontenttop() string {
	if o == nil || IsNil(o.Sidepanelcontenttop) {
		var ret string
		return ret
	}
	return *o.Sidepanelcontenttop
}

// GetSidepanelcontenttopOk returns a tuple with the Sidepanelcontenttop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetSidepanelcontenttopOk() (*string, bool) {
	if o == nil || IsNil(o.Sidepanelcontenttop) {
		return nil, false
	}
	return o.Sidepanelcontenttop, true
}

// HasSidepanelcontenttop returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasSidepanelcontenttop() bool {
	if o != nil && !IsNil(o.Sidepanelcontenttop) {
		return true
	}

	return false
}

// SetSidepanelcontenttop gets a reference to the given string and assigns it to the Sidepanelcontenttop field.
func (o *ArticleGenericFullProperties) SetSidepanelcontenttop(v string) {
	o.Sidepanelcontenttop = &v
}

// GetSidepanelcontent returns the Sidepanelcontent field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetSidepanelcontent() string {
	if o == nil || IsNil(o.Sidepanelcontent) {
		var ret string
		return ret
	}
	return *o.Sidepanelcontent
}

// GetSidepanelcontentOk returns a tuple with the Sidepanelcontent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetSidepanelcontentOk() (*string, bool) {
	if o == nil || IsNil(o.Sidepanelcontent) {
		return nil, false
	}
	return o.Sidepanelcontent, true
}

// HasSidepanelcontent returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasSidepanelcontent() bool {
	if o != nil && !IsNil(o.Sidepanelcontent) {
		return true
	}

	return false
}

// SetSidepanelcontent gets a reference to the given string and assigns it to the Sidepanelcontent field.
func (o *ArticleGenericFullProperties) SetSidepanelcontent(v string) {
	o.Sidepanelcontent = &v
}

// GetSidebarcontentbottom returns the Sidebarcontentbottom field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetSidebarcontentbottom() string {
	if o == nil || IsNil(o.Sidebarcontentbottom) {
		var ret string
		return ret
	}
	return *o.Sidebarcontentbottom
}

// GetSidebarcontentbottomOk returns a tuple with the Sidebarcontentbottom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetSidebarcontentbottomOk() (*string, bool) {
	if o == nil || IsNil(o.Sidebarcontentbottom) {
		return nil, false
	}
	return o.Sidebarcontentbottom, true
}

// HasSidebarcontentbottom returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasSidebarcontentbottom() bool {
	if o != nil && !IsNil(o.Sidebarcontentbottom) {
		return true
	}

	return false
}

// SetSidebarcontentbottom gets a reference to the given string and assigns it to the Sidebarcontentbottom field.
func (o *ArticleGenericFullProperties) SetSidebarcontentbottom(v string) {
	o.Sidebarcontentbottom = &v
}

// GetFootnotes returns the Footnotes field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetFootnotes() string {
	if o == nil || IsNil(o.Footnotes) {
		var ret string
		return ret
	}
	return *o.Footnotes
}

// GetFootnotesOk returns a tuple with the Footnotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetFootnotesOk() (*string, bool) {
	if o == nil || IsNil(o.Footnotes) {
		return nil, false
	}
	return o.Footnotes, true
}

// HasFootnotes returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasFootnotes() bool {
	if o != nil && !IsNil(o.Footnotes) {
		return true
	}

	return false
}

// SetFootnotes gets a reference to the given string and assigns it to the Footnotes field.
func (o *ArticleGenericFullProperties) SetFootnotes(v string) {
	o.Footnotes = &v
}

// GetFullfooter returns the Fullfooter field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetFullfooter() string {
	if o == nil || IsNil(o.Fullfooter) {
		var ret string
		return ret
	}
	return *o.Fullfooter
}

// GetFullfooterOk returns a tuple with the Fullfooter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetFullfooterOk() (*string, bool) {
	if o == nil || IsNil(o.Fullfooter) {
		return nil, false
	}
	return o.Fullfooter, true
}

// HasFullfooter returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasFullfooter() bool {
	if o != nil && !IsNil(o.Fullfooter) {
		return true
	}

	return false
}

// SetFullfooter gets a reference to the given string and assigns it to the Fullfooter field.
func (o *ArticleGenericFullProperties) SetFullfooter(v string) {
	o.Fullfooter = &v
}

// GetAuthornotes returns the Authornotes field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetAuthornotes() string {
	if o == nil || IsNil(o.Authornotes) {
		var ret string
		return ret
	}
	return *o.Authornotes
}

// GetAuthornotesOk returns a tuple with the Authornotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetAuthornotesOk() (*string, bool) {
	if o == nil || IsNil(o.Authornotes) {
		return nil, false
	}
	return o.Authornotes, true
}

// HasAuthornotes returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasAuthornotes() bool {
	if o != nil && !IsNil(o.Authornotes) {
		return true
	}

	return false
}

// SetAuthornotes gets a reference to the given string and assigns it to the Authornotes field.
func (o *ArticleGenericFullProperties) SetAuthornotes(v string) {
	o.Authornotes = &v
}

// GetScrapbook returns the Scrapbook field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetScrapbook() string {
	if o == nil || IsNil(o.Scrapbook) {
		var ret string
		return ret
	}
	return *o.Scrapbook
}

// GetScrapbookOk returns a tuple with the Scrapbook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetScrapbookOk() (*string, bool) {
	if o == nil || IsNil(o.Scrapbook) {
		return nil, false
	}
	return o.Scrapbook, true
}

// HasScrapbook returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasScrapbook() bool {
	if o != nil && !IsNil(o.Scrapbook) {
		return true
	}

	return false
}

// SetScrapbook gets a reference to the given string and assigns it to the Scrapbook field.
func (o *ArticleGenericFullProperties) SetScrapbook(v string) {
	o.Scrapbook = &v
}

// GetCredits returns the Credits field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetCredits() string {
	if o == nil || IsNil(o.Credits) {
		var ret string
		return ret
	}
	return *o.Credits
}

// GetCreditsOk returns a tuple with the Credits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetCreditsOk() (*string, bool) {
	if o == nil || IsNil(o.Credits) {
		return nil, false
	}
	return o.Credits, true
}

// HasCredits returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasCredits() bool {
	if o != nil && !IsNil(o.Credits) {
		return true
	}

	return false
}

// SetCredits gets a reference to the given string and assigns it to the Credits field.
func (o *ArticleGenericFullProperties) SetCredits(v string) {
	o.Credits = &v
}

// GetDisplaySidebar returns the DisplaySidebar field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetDisplaySidebar() bool {
	if o == nil || IsNil(o.DisplaySidebar) {
		var ret bool
		return ret
	}
	return *o.DisplaySidebar
}

// GetDisplaySidebarOk returns a tuple with the DisplaySidebar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetDisplaySidebarOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplaySidebar) {
		return nil, false
	}
	return o.DisplaySidebar, true
}

// HasDisplaySidebar returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasDisplaySidebar() bool {
	if o != nil && !IsNil(o.DisplaySidebar) {
		return true
	}

	return false
}

// SetDisplaySidebar gets a reference to the given bool and assigns it to the DisplaySidebar field.
func (o *ArticleGenericFullProperties) SetDisplaySidebar(v bool) {
	o.DisplaySidebar = &v
}

// GetTimeline returns the Timeline field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetTimeline() Object {
	if o == nil || IsNil(o.Timeline) {
		var ret Object
		return ret
	}
	return *o.Timeline
}

// GetTimelineOk returns a tuple with the Timeline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetTimelineOk() (*Object, bool) {
	if o == nil || IsNil(o.Timeline) {
		return nil, false
	}
	return o.Timeline, true
}

// HasTimeline returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasTimeline() bool {
	if o != nil && !IsNil(o.Timeline) {
		return true
	}

	return false
}

// SetTimeline gets a reference to the given Object and assigns it to the Timeline field.
func (o *ArticleGenericFullProperties) SetTimeline(v Object) {
	o.Timeline = &v
}

// GetPrompt returns the Prompt field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetPrompt() Object {
	if o == nil || IsNil(o.Prompt) {
		var ret Object
		return ret
	}
	return *o.Prompt
}

// GetPromptOk returns a tuple with the Prompt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetPromptOk() (*Object, bool) {
	if o == nil || IsNil(o.Prompt) {
		return nil, false
	}
	return o.Prompt, true
}

// HasPrompt returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasPrompt() bool {
	if o != nil && !IsNil(o.Prompt) {
		return true
	}

	return false
}

// SetPrompt gets a reference to the given Object and assigns it to the Prompt field.
func (o *ArticleGenericFullProperties) SetPrompt(v Object) {
	o.Prompt = &v
}

// GetShowSeeded returns the ShowSeeded field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetShowSeeded() bool {
	if o == nil || IsNil(o.ShowSeeded) {
		var ret bool
		return ret
	}
	return *o.ShowSeeded
}

// GetShowSeededOk returns a tuple with the ShowSeeded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetShowSeededOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowSeeded) {
		return nil, false
	}
	return o.ShowSeeded, true
}

// HasShowSeeded returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasShowSeeded() bool {
	if o != nil && !IsNil(o.ShowSeeded) {
		return true
	}

	return false
}

// SetShowSeeded gets a reference to the given bool and assigns it to the ShowSeeded field.
func (o *ArticleGenericFullProperties) SetShowSeeded(v bool) {
	o.ShowSeeded = &v
}

// GetWebhookUpdate returns the WebhookUpdate field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetWebhookUpdate() bool {
	if o == nil || IsNil(o.WebhookUpdate) {
		var ret bool
		return ret
	}
	return *o.WebhookUpdate
}

// GetWebhookUpdateOk returns a tuple with the WebhookUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetWebhookUpdateOk() (*bool, bool) {
	if o == nil || IsNil(o.WebhookUpdate) {
		return nil, false
	}
	return o.WebhookUpdate, true
}

// HasWebhookUpdate returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasWebhookUpdate() bool {
	if o != nil && !IsNil(o.WebhookUpdate) {
		return true
	}

	return false
}

// SetWebhookUpdate gets a reference to the given bool and assigns it to the WebhookUpdate field.
func (o *ArticleGenericFullProperties) SetWebhookUpdate(v bool) {
	o.WebhookUpdate = &v
}

// GetCommunityUpdate returns the CommunityUpdate field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetCommunityUpdate() bool {
	if o == nil || IsNil(o.CommunityUpdate) {
		var ret bool
		return ret
	}
	return *o.CommunityUpdate
}

// GetCommunityUpdateOk returns a tuple with the CommunityUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetCommunityUpdateOk() (*bool, bool) {
	if o == nil || IsNil(o.CommunityUpdate) {
		return nil, false
	}
	return o.CommunityUpdate, true
}

// HasCommunityUpdate returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasCommunityUpdate() bool {
	if o != nil && !IsNil(o.CommunityUpdate) {
		return true
	}

	return false
}

// SetCommunityUpdate gets a reference to the given bool and assigns it to the CommunityUpdate field.
func (o *ArticleGenericFullProperties) SetCommunityUpdate(v bool) {
	o.CommunityUpdate = &v
}

// GetCommentPlaceholder returns the CommentPlaceholder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArticleGenericFullProperties) GetCommentPlaceholder() string {
	if o == nil || IsNil(o.CommentPlaceholder.Get()) {
		var ret string
		return ret
	}
	return *o.CommentPlaceholder.Get()
}

// GetCommentPlaceholderOk returns a tuple with the CommentPlaceholder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArticleGenericFullProperties) GetCommentPlaceholderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CommentPlaceholder.Get(), o.CommentPlaceholder.IsSet()
}

// HasCommentPlaceholder returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasCommentPlaceholder() bool {
	if o != nil && o.CommentPlaceholder.IsSet() {
		return true
	}

	return false
}

// SetCommentPlaceholder gets a reference to the given NullableString and assigns it to the CommentPlaceholder field.
func (o *ArticleGenericFullProperties) SetCommentPlaceholder(v string) {
	o.CommentPlaceholder.Set(&v)
}
// SetCommentPlaceholderNil sets the value for CommentPlaceholder to be an explicit nil
func (o *ArticleGenericFullProperties) SetCommentPlaceholderNil() {
	o.CommentPlaceholder.Set(nil)
}

// UnsetCommentPlaceholder ensures that no value is present for CommentPlaceholder, not even an explicit nil
func (o *ArticleGenericFullProperties) UnsetCommentPlaceholder() {
	o.CommentPlaceholder.Unset()
}

// GetMetaTitle returns the MetaTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArticleGenericFullProperties) GetMetaTitle() string {
	if o == nil || IsNil(o.MetaTitle.Get()) {
		var ret string
		return ret
	}
	return *o.MetaTitle.Get()
}

// GetMetaTitleOk returns a tuple with the MetaTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArticleGenericFullProperties) GetMetaTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetaTitle.Get(), o.MetaTitle.IsSet()
}

// HasMetaTitle returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasMetaTitle() bool {
	if o != nil && o.MetaTitle.IsSet() {
		return true
	}

	return false
}

// SetMetaTitle gets a reference to the given NullableString and assigns it to the MetaTitle field.
func (o *ArticleGenericFullProperties) SetMetaTitle(v string) {
	o.MetaTitle.Set(&v)
}
// SetMetaTitleNil sets the value for MetaTitle to be an explicit nil
func (o *ArticleGenericFullProperties) SetMetaTitleNil() {
	o.MetaTitle.Set(nil)
}

// UnsetMetaTitle ensures that no value is present for MetaTitle, not even an explicit nil
func (o *ArticleGenericFullProperties) UnsetMetaTitle() {
	o.MetaTitle.Unset()
}

// GetMetadDescription returns the MetadDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArticleGenericFullProperties) GetMetadDescription() string {
	if o == nil || IsNil(o.MetadDescription.Get()) {
		var ret string
		return ret
	}
	return *o.MetadDescription.Get()
}

// GetMetadDescriptionOk returns a tuple with the MetadDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArticleGenericFullProperties) GetMetadDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetadDescription.Get(), o.MetadDescription.IsSet()
}

// HasMetadDescription returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasMetadDescription() bool {
	if o != nil && o.MetadDescription.IsSet() {
		return true
	}

	return false
}

// SetMetadDescription gets a reference to the given NullableString and assigns it to the MetadDescription field.
func (o *ArticleGenericFullProperties) SetMetadDescription(v string) {
	o.MetadDescription.Set(&v)
}
// SetMetadDescriptionNil sets the value for MetadDescription to be an explicit nil
func (o *ArticleGenericFullProperties) SetMetadDescriptionNil() {
	o.MetadDescription.Set(nil)
}

// UnsetMetadDescription ensures that no value is present for MetadDescription, not even an explicit nil
func (o *ArticleGenericFullProperties) UnsetMetadDescription() {
	o.MetadDescription.Unset()
}

// GetSubheading returns the Subheading field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArticleGenericFullProperties) GetSubheading() string {
	if o == nil || IsNil(o.Subheading.Get()) {
		var ret string
		return ret
	}
	return *o.Subheading.Get()
}

// GetSubheadingOk returns a tuple with the Subheading field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArticleGenericFullProperties) GetSubheadingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subheading.Get(), o.Subheading.IsSet()
}

// HasSubheading returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasSubheading() bool {
	if o != nil && o.Subheading.IsSet() {
		return true
	}

	return false
}

// SetSubheading gets a reference to the given NullableString and assigns it to the Subheading field.
func (o *ArticleGenericFullProperties) SetSubheading(v string) {
	o.Subheading.Set(&v)
}
// SetSubheadingNil sets the value for Subheading to be an explicit nil
func (o *ArticleGenericFullProperties) SetSubheadingNil() {
	o.Subheading.Set(nil)
}

// UnsetSubheading ensures that no value is present for Subheading, not even an explicit nil
func (o *ArticleGenericFullProperties) UnsetSubheading() {
	o.Subheading.Unset()
}

// GetCoverIsMap returns the CoverIsMap field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetCoverIsMap() bool {
	if o == nil || IsNil(o.CoverIsMap) {
		var ret bool
		return ret
	}
	return *o.CoverIsMap
}

// GetCoverIsMapOk returns a tuple with the CoverIsMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetCoverIsMapOk() (*bool, bool) {
	if o == nil || IsNil(o.CoverIsMap) {
		return nil, false
	}
	return o.CoverIsMap, true
}

// HasCoverIsMap returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasCoverIsMap() bool {
	if o != nil && !IsNil(o.CoverIsMap) {
		return true
	}

	return false
}

// SetCoverIsMap gets a reference to the given bool and assigns it to the CoverIsMap field.
func (o *ArticleGenericFullProperties) SetCoverIsMap(v bool) {
	o.CoverIsMap = &v
}

// GetIsFeaturedArticle returns the IsFeaturedArticle field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetIsFeaturedArticle() bool {
	if o == nil || IsNil(o.IsFeaturedArticle) {
		var ret bool
		return ret
	}
	return *o.IsFeaturedArticle
}

// GetIsFeaturedArticleOk returns a tuple with the IsFeaturedArticle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetIsFeaturedArticleOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFeaturedArticle) {
		return nil, false
	}
	return o.IsFeaturedArticle, true
}

// HasIsFeaturedArticle returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasIsFeaturedArticle() bool {
	if o != nil && !IsNil(o.IsFeaturedArticle) {
		return true
	}

	return false
}

// SetIsFeaturedArticle gets a reference to the given bool and assigns it to the IsFeaturedArticle field.
func (o *ArticleGenericFullProperties) SetIsFeaturedArticle(v bool) {
	o.IsFeaturedArticle = &v
}

// GetIsAdultContent returns the IsAdultContent field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetIsAdultContent() bool {
	if o == nil || IsNil(o.IsAdultContent) {
		var ret bool
		return ret
	}
	return *o.IsAdultContent
}

// GetIsAdultContentOk returns a tuple with the IsAdultContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetIsAdultContentOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAdultContent) {
		return nil, false
	}
	return o.IsAdultContent, true
}

// HasIsAdultContent returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasIsAdultContent() bool {
	if o != nil && !IsNil(o.IsAdultContent) {
		return true
	}

	return false
}

// SetIsAdultContent gets a reference to the given bool and assigns it to the IsAdultContent field.
func (o *ArticleGenericFullProperties) SetIsAdultContent(v bool) {
	o.IsAdultContent = &v
}

// GetIsLocked returns the IsLocked field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetIsLocked() bool {
	if o == nil || IsNil(o.IsLocked) {
		var ret bool
		return ret
	}
	return *o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetIsLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLocked) {
		return nil, false
	}
	return o.IsLocked, true
}

// HasIsLocked returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasIsLocked() bool {
	if o != nil && !IsNil(o.IsLocked) {
		return true
	}

	return false
}

// SetIsLocked gets a reference to the given bool and assigns it to the IsLocked field.
func (o *ArticleGenericFullProperties) SetIsLocked(v bool) {
	o.IsLocked = &v
}

// GetAllowComments returns the AllowComments field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetAllowComments() bool {
	if o == nil || IsNil(o.AllowComments) {
		var ret bool
		return ret
	}
	return *o.AllowComments
}

// GetAllowCommentsOk returns a tuple with the AllowComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetAllowCommentsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowComments) {
		return nil, false
	}
	return o.AllowComments, true
}

// HasAllowComments returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasAllowComments() bool {
	if o != nil && !IsNil(o.AllowComments) {
		return true
	}

	return false
}

// SetAllowComments gets a reference to the given bool and assigns it to the AllowComments field.
func (o *ArticleGenericFullProperties) SetAllowComments(v bool) {
	o.AllowComments = &v
}

// GetShowInToc returns the ShowInToc field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetShowInToc() bool {
	if o == nil || IsNil(o.ShowInToc) {
		var ret bool
		return ret
	}
	return *o.ShowInToc
}

// GetShowInTocOk returns a tuple with the ShowInToc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetShowInTocOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowInToc) {
		return nil, false
	}
	return o.ShowInToc, true
}

// HasShowInToc returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasShowInToc() bool {
	if o != nil && !IsNil(o.ShowInToc) {
		return true
	}

	return false
}

// SetShowInToc gets a reference to the given bool and assigns it to the ShowInToc field.
func (o *ArticleGenericFullProperties) SetShowInToc(v bool) {
	o.ShowInToc = &v
}

// GetIsEmphasized returns the IsEmphasized field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetIsEmphasized() bool {
	if o == nil || IsNil(o.IsEmphasized) {
		var ret bool
		return ret
	}
	return *o.IsEmphasized
}

// GetIsEmphasizedOk returns a tuple with the IsEmphasized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetIsEmphasizedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEmphasized) {
		return nil, false
	}
	return o.IsEmphasized, true
}

// HasIsEmphasized returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasIsEmphasized() bool {
	if o != nil && !IsNil(o.IsEmphasized) {
		return true
	}

	return false
}

// SetIsEmphasized gets a reference to the given bool and assigns it to the IsEmphasized field.
func (o *ArticleGenericFullProperties) SetIsEmphasized(v bool) {
	o.IsEmphasized = &v
}

// GetDisplayAuthor returns the DisplayAuthor field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetDisplayAuthor() bool {
	if o == nil || IsNil(o.DisplayAuthor) {
		var ret bool
		return ret
	}
	return *o.DisplayAuthor
}

// GetDisplayAuthorOk returns a tuple with the DisplayAuthor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetDisplayAuthorOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplayAuthor) {
		return nil, false
	}
	return o.DisplayAuthor, true
}

// HasDisplayAuthor returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasDisplayAuthor() bool {
	if o != nil && !IsNil(o.DisplayAuthor) {
		return true
	}

	return false
}

// SetDisplayAuthor gets a reference to the given bool and assigns it to the DisplayAuthor field.
func (o *ArticleGenericFullProperties) SetDisplayAuthor(v bool) {
	o.DisplayAuthor = &v
}

// GetDisplayChildrenUnder returns the DisplayChildrenUnder field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetDisplayChildrenUnder() bool {
	if o == nil || IsNil(o.DisplayChildrenUnder) {
		var ret bool
		return ret
	}
	return *o.DisplayChildrenUnder
}

// GetDisplayChildrenUnderOk returns a tuple with the DisplayChildrenUnder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetDisplayChildrenUnderOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplayChildrenUnder) {
		return nil, false
	}
	return o.DisplayChildrenUnder, true
}

// HasDisplayChildrenUnder returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasDisplayChildrenUnder() bool {
	if o != nil && !IsNil(o.DisplayChildrenUnder) {
		return true
	}

	return false
}

// SetDisplayChildrenUnder gets a reference to the given bool and assigns it to the DisplayChildrenUnder field.
func (o *ArticleGenericFullProperties) SetDisplayChildrenUnder(v bool) {
	o.DisplayChildrenUnder = &v
}

// GetDisplayTitle returns the DisplayTitle field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetDisplayTitle() bool {
	if o == nil || IsNil(o.DisplayTitle) {
		var ret bool
		return ret
	}
	return *o.DisplayTitle
}

// GetDisplayTitleOk returns a tuple with the DisplayTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetDisplayTitleOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplayTitle) {
		return nil, false
	}
	return o.DisplayTitle, true
}

// HasDisplayTitle returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasDisplayTitle() bool {
	if o != nil && !IsNil(o.DisplayTitle) {
		return true
	}

	return false
}

// SetDisplayTitle gets a reference to the given bool and assigns it to the DisplayTitle field.
func (o *ArticleGenericFullProperties) SetDisplayTitle(v bool) {
	o.DisplayTitle = &v
}

// GetDisplaySheet returns the DisplaySheet field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetDisplaySheet() bool {
	if o == nil || IsNil(o.DisplaySheet) {
		var ret bool
		return ret
	}
	return *o.DisplaySheet
}

// GetDisplaySheetOk returns a tuple with the DisplaySheet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetDisplaySheetOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplaySheet) {
		return nil, false
	}
	return o.DisplaySheet, true
}

// HasDisplaySheet returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasDisplaySheet() bool {
	if o != nil && !IsNil(o.DisplaySheet) {
		return true
	}

	return false
}

// SetDisplaySheet gets a reference to the given bool and assigns it to the DisplaySheet field.
func (o *ArticleGenericFullProperties) SetDisplaySheet(v bool) {
	o.DisplaySheet = &v
}

// GetBadge returns the Badge field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArticleGenericFullProperties) GetBadge() string {
	if o == nil || IsNil(o.Badge.Get()) {
		var ret string
		return ret
	}
	return *o.Badge.Get()
}

// GetBadgeOk returns a tuple with the Badge field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArticleGenericFullProperties) GetBadgeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Badge.Get(), o.Badge.IsSet()
}

// HasBadge returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasBadge() bool {
	if o != nil && o.Badge.IsSet() {
		return true
	}

	return false
}

// SetBadge gets a reference to the given NullableString and assigns it to the Badge field.
func (o *ArticleGenericFullProperties) SetBadge(v string) {
	o.Badge.Set(&v)
}
// SetBadgeNil sets the value for Badge to be an explicit nil
func (o *ArticleGenericFullProperties) SetBadgeNil() {
	o.Badge.Set(nil)
}

// UnsetBadge ensures that no value is present for Badge, not even an explicit nil
func (o *ArticleGenericFullProperties) UnsetBadge() {
	o.Badge.Unset()
}

// GetSecrets returns the Secrets field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetSecrets() []Object {
	if o == nil || IsNil(o.Secrets) {
		var ret []Object
		return ret
	}
	return o.Secrets
}

// GetSecretsOk returns a tuple with the Secrets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetSecretsOk() ([]Object, bool) {
	if o == nil || IsNil(o.Secrets) {
		return nil, false
	}
	return o.Secrets, true
}

// HasSecrets returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasSecrets() bool {
	if o != nil && !IsNil(o.Secrets) {
		return true
	}

	return false
}

// SetSecrets gets a reference to the given []Object and assigns it to the Secrets field.
func (o *ArticleGenericFullProperties) SetSecrets(v []Object) {
	o.Secrets = v
}

// GetHistories returns the Histories field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetHistories() []Object {
	if o == nil || IsNil(o.Histories) {
		var ret []Object
		return ret
	}
	return o.Histories
}

// GetHistoriesOk returns a tuple with the Histories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetHistoriesOk() ([]Object, bool) {
	if o == nil || IsNil(o.Histories) {
		return nil, false
	}
	return o.Histories, true
}

// HasHistories returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasHistories() bool {
	if o != nil && !IsNil(o.Histories) {
		return true
	}

	return false
}

// SetHistories gets a reference to the given []Object and assigns it to the Histories field.
func (o *ArticleGenericFullProperties) SetHistories(v []Object) {
	o.Histories = v
}

// GetEditURL returns the EditURL field value if set, zero value otherwise.
func (o *ArticleGenericFullProperties) GetEditURL() string {
	if o == nil || IsNil(o.EditURL) {
		var ret string
		return ret
	}
	return *o.EditURL
}

// GetEditURLOk returns a tuple with the EditURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleGenericFullProperties) GetEditURLOk() (*string, bool) {
	if o == nil || IsNil(o.EditURL) {
		return nil, false
	}
	return o.EditURL, true
}

// HasEditURL returns a boolean if a field has been set.
func (o *ArticleGenericFullProperties) HasEditURL() bool {
	if o != nil && !IsNil(o.EditURL) {
		return true
	}

	return false
}

// SetEditURL gets a reference to the given string and assigns it to the EditURL field.
func (o *ArticleGenericFullProperties) SetEditURL(v string) {
	o.EditURL = &v
}

func (o ArticleGenericFullProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArticleGenericFullProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pronunciation) {
		toSerialize["pronunciation"] = o.Pronunciation
	}
	if !IsNil(o.Snippet) {
		toSerialize["snippet"] = o.Snippet
	}
	if !IsNil(o.Seeded) {
		toSerialize["seeded"] = o.Seeded
	}
	if !IsNil(o.Sidebarcontent) {
		toSerialize["sidebarcontent"] = o.Sidebarcontent
	}
	if !IsNil(o.Sidepanelcontenttop) {
		toSerialize["sidepanelcontenttop"] = o.Sidepanelcontenttop
	}
	if !IsNil(o.Sidepanelcontent) {
		toSerialize["sidepanelcontent"] = o.Sidepanelcontent
	}
	if !IsNil(o.Sidebarcontentbottom) {
		toSerialize["sidebarcontentbottom"] = o.Sidebarcontentbottom
	}
	if !IsNil(o.Footnotes) {
		toSerialize["footnotes"] = o.Footnotes
	}
	if !IsNil(o.Fullfooter) {
		toSerialize["fullfooter"] = o.Fullfooter
	}
	if !IsNil(o.Authornotes) {
		toSerialize["authornotes"] = o.Authornotes
	}
	if !IsNil(o.Scrapbook) {
		toSerialize["scrapbook"] = o.Scrapbook
	}
	if !IsNil(o.Credits) {
		toSerialize["credits"] = o.Credits
	}
	if !IsNil(o.DisplaySidebar) {
		toSerialize["displaySidebar"] = o.DisplaySidebar
	}
	if !IsNil(o.Timeline) {
		toSerialize["timeline"] = o.Timeline
	}
	if !IsNil(o.Prompt) {
		toSerialize["prompt"] = o.Prompt
	}
	if !IsNil(o.ShowSeeded) {
		toSerialize["showSeeded"] = o.ShowSeeded
	}
	if !IsNil(o.WebhookUpdate) {
		toSerialize["webhookUpdate"] = o.WebhookUpdate
	}
	if !IsNil(o.CommunityUpdate) {
		toSerialize["communityUpdate"] = o.CommunityUpdate
	}
	if o.CommentPlaceholder.IsSet() {
		toSerialize["commentPlaceholder"] = o.CommentPlaceholder.Get()
	}
	if o.MetaTitle.IsSet() {
		toSerialize["metaTitle"] = o.MetaTitle.Get()
	}
	if o.MetadDescription.IsSet() {
		toSerialize["metadDescription"] = o.MetadDescription.Get()
	}
	if o.Subheading.IsSet() {
		toSerialize["subheading"] = o.Subheading.Get()
	}
	if !IsNil(o.CoverIsMap) {
		toSerialize["coverIsMap"] = o.CoverIsMap
	}
	if !IsNil(o.IsFeaturedArticle) {
		toSerialize["isFeaturedArticle"] = o.IsFeaturedArticle
	}
	if !IsNil(o.IsAdultContent) {
		toSerialize["isAdultContent"] = o.IsAdultContent
	}
	if !IsNil(o.IsLocked) {
		toSerialize["isLocked"] = o.IsLocked
	}
	if !IsNil(o.AllowComments) {
		toSerialize["allowComments"] = o.AllowComments
	}
	if !IsNil(o.ShowInToc) {
		toSerialize["showInToc"] = o.ShowInToc
	}
	if !IsNil(o.IsEmphasized) {
		toSerialize["isEmphasized"] = o.IsEmphasized
	}
	if !IsNil(o.DisplayAuthor) {
		toSerialize["displayAuthor"] = o.DisplayAuthor
	}
	if !IsNil(o.DisplayChildrenUnder) {
		toSerialize["displayChildrenUnder"] = o.DisplayChildrenUnder
	}
	if !IsNil(o.DisplayTitle) {
		toSerialize["displayTitle"] = o.DisplayTitle
	}
	if !IsNil(o.DisplaySheet) {
		toSerialize["displaySheet"] = o.DisplaySheet
	}
	if o.Badge.IsSet() {
		toSerialize["badge"] = o.Badge.Get()
	}
	if !IsNil(o.Secrets) {
		toSerialize["secrets"] = o.Secrets
	}
	if !IsNil(o.Histories) {
		toSerialize["histories"] = o.Histories
	}
	if !IsNil(o.EditURL) {
		toSerialize["editURL"] = o.EditURL
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ArticleGenericFullProperties) UnmarshalJSON(data []byte) (err error) {
	varArticleGenericFullProperties := _ArticleGenericFullProperties{}

	err = json.Unmarshal(data, &varArticleGenericFullProperties)

	if err != nil {
		return err
	}

	*o = ArticleGenericFullProperties(varArticleGenericFullProperties)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "pronunciation")
		delete(additionalProperties, "snippet")
		delete(additionalProperties, "seeded")
		delete(additionalProperties, "sidebarcontent")
		delete(additionalProperties, "sidepanelcontenttop")
		delete(additionalProperties, "sidepanelcontent")
		delete(additionalProperties, "sidebarcontentbottom")
		delete(additionalProperties, "footnotes")
		delete(additionalProperties, "fullfooter")
		delete(additionalProperties, "authornotes")
		delete(additionalProperties, "scrapbook")
		delete(additionalProperties, "credits")
		delete(additionalProperties, "displaySidebar")
		delete(additionalProperties, "timeline")
		delete(additionalProperties, "prompt")
		delete(additionalProperties, "showSeeded")
		delete(additionalProperties, "webhookUpdate")
		delete(additionalProperties, "communityUpdate")
		delete(additionalProperties, "commentPlaceholder")
		delete(additionalProperties, "metaTitle")
		delete(additionalProperties, "metadDescription")
		delete(additionalProperties, "subheading")
		delete(additionalProperties, "coverIsMap")
		delete(additionalProperties, "isFeaturedArticle")
		delete(additionalProperties, "isAdultContent")
		delete(additionalProperties, "isLocked")
		delete(additionalProperties, "allowComments")
		delete(additionalProperties, "showInToc")
		delete(additionalProperties, "isEmphasized")
		delete(additionalProperties, "displayAuthor")
		delete(additionalProperties, "displayChildrenUnder")
		delete(additionalProperties, "displayTitle")
		delete(additionalProperties, "displaySheet")
		delete(additionalProperties, "badge")
		delete(additionalProperties, "secrets")
		delete(additionalProperties, "histories")
		delete(additionalProperties, "editURL")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableArticleGenericFullProperties struct {
	value *ArticleGenericFullProperties
	isSet bool
}

func (v NullableArticleGenericFullProperties) Get() *ArticleGenericFullProperties {
	return v.value
}

func (v *NullableArticleGenericFullProperties) Set(val *ArticleGenericFullProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableArticleGenericFullProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableArticleGenericFullProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArticleGenericFullProperties(val *ArticleGenericFullProperties) *NullableArticleGenericFullProperties {
	return &NullableArticleGenericFullProperties{value: val, isSet: true}
}

func (v NullableArticleGenericFullProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArticleGenericFullProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


