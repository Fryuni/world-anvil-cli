secret:
  get:
    tags:
      - Secret
    summary: Read Secret
    description: |-
      Retrieve the metadata of a single secret. The returned fields depend on the give granularity.
    operationId: readSecret
    parameters:
      - name: id
        in: query
        required: true
        schema:
          type: string
      - name: granularity
        in: query
        required: true
        schema:
          type: string
          enum: [ "-1", "0", "2"]
    responses:
      '200':
        description: 'The secret object. The included fields depend on the chosen granularity.'
        content:
          application/json:
            schema:
              oneOf:
                - $ref: 'schemas/secret.ref.yml'
                - $ref: 'schemas/secret.zero.yml'
                - $ref: 'schemas/secret.two.yml'
      '400':
        $ref: '../responses/BadRequest.yml'
      '401':
        $ref: '../responses/Unauthorized.yml'
      '403':
        $ref: '../responses/Forbidden.yml'
      '404':
        $ref: '../responses/NotFound.yml'
      '405':
        $ref: '../responses/MethodNotAllowed.yml'
      '422':
        $ref: '../responses/UnprocessableEntity.yml'
  put:
    tags:
      - Secret
    summary: Create Secret
    description: >-
      Create a new secret. The secret requires a title and a world id to be created.
    operationId: createSecret
    requestBody:
      content:
        application/json:
          schema:
            $ref: 'schemas/secret.create.yml'
    responses:
      '200':
        description: 'Returns the reference object of the created secret.'
        content:
          application/json:
            schema:
              $ref: 'schemas/secret.ref.yml'
      '400':
        $ref: '../responses/BadRequest.yml'
      '401':
        $ref: '../responses/Unauthorized.yml'
      '403':
        $ref: '../responses/Forbidden.yml'
      '404':
        $ref: '../responses/NotFound.yml'
      '405':
        $ref: '../responses/MethodNotAllowed.yml'
      '422':
        $ref: '../responses/UnprocessableEntity.yml'
  delete:
    tags:
      - Secret
    summary: Delete Secret
    description: Delete a secret. This action is irreversible.
    operationId: deleteSecret
    parameters:
      - name: id
        in: query
        required: true
        schema:
          type: string
    responses:
      '200':
        description: 'Deletion was successful.'
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
      '400':
        $ref: '../responses/BadRequest.yml'
      '401':
        $ref: '../responses/Unauthorized.yml'
      '403':
        $ref: '../responses/Forbidden.yml'
      '404':
        $ref: '../responses/NotFound.yml'
      '405':
        $ref: '../responses/MethodNotAllowed.yml'
      '422':
        $ref: '../responses/UnprocessableEntity.yml'
  patch:
    tags:
      - Secret
    summary: Update Secret
    description: >-
      Update the metadata and content of a secret. Check the schema for the fields which can be updated.
    operationId: updateSecret
    parameters:
      - name: id
        in: query
        required: true
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            $ref: 'schemas/secret.update.yml'
    responses:
      '200':
        description: 'Returns the reference object of the updated secret.'
        content:
          application/json:
            schema:
              $ref: 'schemas/secret.ref.yml'
      '400':
        $ref: '../responses/BadRequest.yml'
      '401':
        $ref: '../responses/Unauthorized.yml'
      '403':
        $ref: '../responses/Forbidden.yml'
      '404':
        $ref: '../responses/NotFound.yml'
      '405':
        $ref: '../responses/MethodNotAllowed.yml'
      '422':
        $ref: '../responses/UnprocessableEntity.yml'