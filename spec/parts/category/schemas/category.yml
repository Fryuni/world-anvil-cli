CategoryRef:
  type: object
  title: Category
  description: Basic identifing metadata of a category.
  properties:
    id: 
      type: string
      format: uuid
      readOnly: true
    title: 
      type: string
      example: Category Title
    slug: 
      type: string
      example: 'category-title-category'
      readOnly: true
    state: 
      type: string
      enum: [ private, public]
    isWip: 
      type: string
      nullable: true
      readOnly: true
    isDraft: 
      type: string
      nullable: true
      readOnly: true
    entityClass: 
      type: string
      enum: [Category]
      readOnly: true
    icon: 
      type: string
      example: "fa-solid fa-folder"
    url: 
      type: string
      example: http://www.worldanvil.com/w/<world-slug>/c/<category-slug>
      readOnly: true
    subscribergroups:
      type: array
      items:
        $ref: '../../subscribergroup/schemas/subscribergroup.ref.yml'
      example: []
    folderId: 
      type: string
      nullable: true
      readOnly: true
    tags: 
      type: string
      nullable: true
      readOnly: true
    updateDate:
      $ref: '../../schemas/date.yml'
CategoryReturnRef:
  allOf:
    - $ref: '#/CategoryRef'
    - type: object
      title: Category - GR -1
      properties:
        isEditable: 
          type: boolean
          example: true
          readOnly: true
        success: 
          type: boolean
          example: true
          readOnly: true
Category:
  allOf:
    - $ref: '#/CategoryReturnRef'
    - type: object
      title: Category - GR 0
      description: The basic schema with some additional metadata and content properties.
      properties:
        description:
          type: string
          example: Description
        excerpt:
          type: string
          example: A short teaser.
        isBook:
          type: boolean
          example: false
        displayBookTitle:
          type: boolean
          example: true
        isCollapsed:
          type: boolean
          example: false
        position:
          type: integer
          example: 1000
        creationDate:
          $ref: '../../schemas/date.yml'
        views:
          type: integer
          example: null
          readOnly: true
CategoryExtended:
  allOf:
    - $ref: '#/Category'
    - type: object
      title: Category - GR 1
      description: The extended schema that returns the custom content columns, the css classes and the display structure.
      properties:
        custom1:
          type: string
          example: Custom Content 1
        custom2:
          type: string
          example: Custom Content 2
        custom3:
          type: string
          example: Custom Content 3
        custom4:
          type: string
          example: Custom Content 4
        custom5:
          type: string
          example: Custom Content 5
        cssClasses:
          type: string
          example: additional-css-class
        systemMeta:
          type: string
          format: json
CategoryFull:
  allOf:
    - $ref: '#/CategoryExtended'
    - type: object
      title: Category - GR 2
      description: This stage adds the relationships of the category to other resources.
      properties:
        pagecover:
          $ref: '../../image/schemas/image.yml#/ImageRef'
        bookcover:
          $ref: '../../image/schemas/image.yml#/ImageRef'
        defaultarticlecover:
          $ref: '../../image/schemas/image.yml#/ImageRef'
        parent:
          $ref: '#/CategoryRef'
        world:
          $ref: '../../world/schemas/world.ref.yml'
        articleRedirect:
          $ref: '../../article/schemas/article.yml#/ArticleRef'
        editURL:
          type: string
          example: "http://www.worldanvil.com/world/category/<category-id>/edit"
          readOnly: true
CategoryUpdate:
  allOf:
    - $ref: '#/CategoryExtended'
    - type: object
      title: Category - Update
      description: All the properties that can be updated on a category.
      properties:
        subscribergroups:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                example: 00000000-0000-0000-0000-000000000000
        pagecover:
          type: object
          properties:
            id: 
              type: integer
              format: int32
              example: 20123
        bookcover:
          type: object
          properties:
            id: 
              type: integer
              format: int32
              example: 20123
        defaultarticlecover:
          type: object
          properties:
            id: 
              type: integer
              format: int32
              example: 20123
        parent:
          type: object
          properties:
            id: 
              type: string
              format: uuid
              example: 00000000-0000-0000-0000-000000000000
        world:
          type: object
          properties:
            id: 
              type: string
              format: uuid
              example: 00000000-0000-0000-0000-000000000000
        articleRedirect:
          type: object
          properties:
            id: 
              type: string
              format: uuid
              example: 00000000-0000-0000-0000-000000000000
CategoryCreate:
  allOf:
    - $ref: '#/CategoryUpdate'
    - type: object
      title: Category - Create
      description: All the properties which can be set when creating a new category. The world and the title are required.
      required:
        - title
        - world